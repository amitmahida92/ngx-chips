{"version":3,"file":"ngx-chips.bundle.js","sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 5216388366b7b097cdf3","webpack:///external \"@angular/core\"","webpack:///./~/rxjs/Observable.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/rxjs/Subscriber.js","webpack:///modules/components/index.ts","webpack:///external \"@angular/forms\"","webpack:///./~/rxjs/util/root.js","webpack:///external \"ng2-material-dropdown\"","webpack:///modules/core/constants/index.ts","webpack:///modules/core/index.ts","webpack:///modules/core/providers/index.ts","webpack:///(webpack)/buildin/global.js","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/common\"","webpack:///modules/components/tag/index.ts","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/add/operator/debounceTime.js","webpack:///./~/rxjs/add/operator/filter.js","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///modules/tag-input.module.ts","webpack:///modules/components/dropdown/index.ts","webpack:///modules/components/dropdown/tag-input-dropdown.component.ts","webpack:///modules/components/icon/icon.ts","webpack:///modules/components/icon/index.ts","webpack:///modules/components/tag-input-form/index.ts","webpack:///modules/components/tag-input-form/tag-input-form.component.ts","webpack:///modules/components/tag-input/animations.ts","webpack:///modules/components/tag-input/index.ts","webpack:///modules/components/tag-input/tag-input.ts","webpack:///modules/components/tag/tag-ripple.component.ts","webpack:///modules/components/tag/tag.component.ts","webpack:///modules/core/accessor.ts","webpack:///modules/core/helpers/index.ts","webpack:///modules/core/helpers/listen.ts","webpack:///modules/core/pipes/highlight.pipe.ts","webpack:///modules/core/pipes/index.ts","webpack:///modules/core/providers/drag-provider.ts","webpack:///modules/core/providers/options-provider.ts","webpack:///modules/defaults.ts","webpack:///modules/index.ts","webpack:///./modules/components/dropdown/tag-input-dropdown.scss","webpack:///./modules/components/icon/icon.scss","webpack:///./modules/components/tag-input-form/tag-input-form.style.scss","webpack:///./modules/components/tag-input/tag-input.style.scss","webpack:///./modules/components/tag/tag-component.style.scss","webpack:///./modules/components/dropdown/tag-input-dropdown.template.html","webpack:///./modules/components/icon/icon.html","webpack:///./modules/components/tag-input-form/tag-input-form.template.html","webpack:///./modules/components/tag-input/tag-input.template.html","webpack:///./modules/components/tag/tag.template.html","webpack:///./~/rxjs/Scheduler.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/add/operator/first.js","webpack:///./~/rxjs/observable/ArrayObservable.js","webpack:///./~/rxjs/observable/EmptyObservable.js","webpack:///./~/rxjs/observable/ScalarObservable.js","webpack:///./~/rxjs/observable/of.js","webpack:///./~/rxjs/operator/debounceTime.js","webpack:///./~/rxjs/operator/filter.js","webpack:///./~/rxjs/operator/first.js","webpack:///./~/rxjs/operator/map.js","webpack:///./~/rxjs/scheduler/Action.js","webpack:///./~/rxjs/scheduler/AsyncAction.js","webpack:///./~/rxjs/scheduler/AsyncScheduler.js","webpack:///./~/rxjs/scheduler/async.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/util/EmptyError.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/isScheduler.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/util/tryCatch.js","webpack:///./modules/components/dropdown/tag-input-dropdown.scss?0961","webpack:///./modules/components/icon/icon.scss?874b","webpack:///./modules/components/tag-input-form/tag-input-form.style.scss?b6f2","webpack:///./modules/components/tag-input/tag-input.style.scss?818a","webpack:///./modules/components/tag/tag-component.style.scss?84c7"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"ng2-material-dropdown\"), require(\"@angular/animations\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"ng2-material-dropdown\", \"@angular/animations\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-chips\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"ng2-material-dropdown\"), require(\"@angular/animations\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ngx-chips\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"ng2-material-dropdown\"], root[\"@angular/animations\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonpngx_chips\"];\n \twindow[\"webpackJsonpngx_chips\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length)\n \t\t\tresolves.shift()();\n \t\tif(executeModules) {\n \t\t\tfor(i=0; i < executeModules.length; i++) {\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn Promise.resolve();\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunks[chunkId]) {\n \t\t\treturn installedChunks[chunkId][2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunks[chunkId][2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + ({\"0\":\"vendor\"}[chunkId]||chunkId) + \".chunk.js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5216388366b7b097cdf3","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 1","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 1\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 2\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 3\n// module chunks = 1","export * from './dropdown';\r\nexport * from './icon';\r\nexport * from './tag-input-form';\r\nexport * from './tag';\r\nexport * from './tag-input';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/index.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = 5\n// module chunks = 1","\"use strict\";\nif (typeof window == 'object' && window.window === window) {\n    exports.root = window;\n}\nelse if (typeof self == 'object' && self.self === self) {\n    exports.root = self;\n}\nelse if (typeof global == 'object' && global.global === global) {\n    exports.root = global;\n}\nelse {\n    // Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n    // This is needed when used with angular/tsickle which inserts a goog.module statement.\n    // Wrap in IIFE\n    (function () {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    })();\n}\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 6\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-material-dropdown\"\n// module id = 7\n// module chunks = 1","/*\r\n** constants and default values for <tag-input>\r\n */\r\n\r\nexport const PLACEHOLDER = '+ Tag';\r\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\r\nexport const KEYDOWN = 'keydown';\r\nexport const KEYUP = 'keyup';\r\nexport const FOCUS = 'focus';\r\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\r\n\r\nexport const ACTIONS_KEYS = {\r\n    DELETE: 'DELETE',\r\n    SWITCH_PREV: 'SWITCH_PREV',\r\n    SWITCH_NEXT: 'SWITCH_NEXT',\r\n    TAB: 'TAB'\r\n};\r\n\r\nexport const KEY_PRESS_ACTIONS = {\r\n    8: ACTIONS_KEYS.DELETE,\r\n    37: ACTIONS_KEYS.SWITCH_PREV,\r\n    39: ACTIONS_KEYS.SWITCH_NEXT,\r\n    9: ACTIONS_KEYS.TAB\r\n};\r\n\r\nexport const DRAG_AND_DROP_KEY = 'Text';\r\nexport const NEXT = 'NEXT';\r\nexport const PREV = 'PREV';\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/constants/index.ts","import * as constants from './constants';\r\nexport { constants };\r\n\r\nexport * from './helpers';\r\nexport * from './pipes';\r\nexport * from './accessor';\r\nexport * from './providers';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/index.ts","export * from './drag-provider';\r\nexport * from './options-provider';\n\n\n// WEBPACK FOOTER //\n// modules/core/providers/index.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 11\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/animations\"\n// module id = 12\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 13\n// module chunks = 1","export * from './tag-ripple.component';\r\nexport * from './tag.component';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag/index.ts","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 15\n// module chunks = 1","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 16\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounceTime_1 = require('../../operator/debounceTime');\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/debounceTime.js\n// module id = 17\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/filter.js\n// module id = 18\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 19\n// module chunks = 1","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 20\n// module chunks = 1","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 21\n// module chunks = 1","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 22\n// module chunks = 1","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\r\nimport { HighlightPipe, DragProvider, Options, OptionsProvider } from './core';\r\n\r\nimport {\r\n    DeleteIconComponent,\r\n    TagComponent,\r\n    TagInputComponent,\r\n    TagInputDropdown,\r\n    TagInputForm,\r\n    TagRipple\r\n} from './components';\r\n\r\nconst COMPONENTS = [\r\n    TagInputComponent,\r\n    DeleteIconComponent,\r\n    TagInputForm,\r\n    TagComponent,\r\n    HighlightPipe,\r\n    TagInputDropdown,\r\n    TagRipple\r\n];\r\n\r\nconst optionsProvider = new OptionsProvider();\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        Ng2DropdownModule\r\n    ],\r\n    declarations: COMPONENTS,\r\n    exports: COMPONENTS,\r\n    providers: [\r\n        DragProvider\r\n    ]\r\n})\r\nexport class TagInputModule {\r\n    /**\r\n     * @name withDefaults\r\n     * @param options {Options}\r\n     */\r\n    public static withDefaults(options: Options): void {\r\n        optionsProvider.setOptions(options);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/tag-input.module.ts","export * from './tag-input-dropdown.component';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/dropdown/index.ts","import {\r\n    Component,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    forwardRef,\r\n    HostListener,\r\n    Injector,\r\n    Input,\r\n    QueryList,\r\n    TemplateRef,\r\n    Type,\r\n    ViewChild\r\n} from '@angular/core';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/first';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\r\nimport { TagModel, TagInputDropdownOptions, OptionsProvider } from '../../core';\r\nimport { TagInputComponent } from '../../components';\r\n\r\nconst defaults: Type<TagInputDropdownOptions> = forwardRef(() => OptionsProvider.defaults.dropdown);\r\n\r\n@Component({\r\n    selector: 'tag-input-dropdown',\r\n    templateUrl: './tag-input-dropdown.template.html',\r\n    styleUrls: ['./tag-input-dropdown.scss']\r\n})\r\nexport class TagInputDropdown {\r\n    /**\r\n     * @name dropdown\r\n     */\r\n    @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\r\n\r\n    /**\r\n     * @name menuTemplate\r\n     * @desc reference to the template if provided by the user\r\n     * @type {TemplateRef}\r\n     */\r\n    @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\r\n\r\n    /**\r\n     * @name offset\r\n     * @type {string}\r\n     */\r\n    @Input() public offset: string = new defaults().offset;\r\n\r\n    /**\r\n     * @name focusFirstElement\r\n     * @type {boolean}\r\n     */\r\n    @Input() public focusFirstElement = new defaults().focusFirstElement;\r\n\r\n    /**\r\n     * - show autocomplete dropdown if the value of input is empty\r\n     * @name showDropdownIfEmpty\r\n     * @type {boolean}\r\n     */\r\n    @Input() public showDropdownIfEmpty = new defaults().showDropdownIfEmpty;\r\n\r\n    /**\r\n     * @description observable passed as input which populates the autocomplete items\r\n     * @name autocompleteObservable\r\n     */\r\n    @Input() public autocompleteObservable: (text: string) => Observable<any>;\r\n\r\n    /**\r\n     * - desc minimum text length in order to display the autocomplete dropdown\r\n     * @name minimumTextLength\r\n     */\r\n    @Input() public minimumTextLength = new defaults().minimumTextLength;\r\n\r\n    /**\r\n     * - number of items to display in the autocomplete dropdown\r\n     * @name limitItemsTo\r\n     */\r\n    @Input() public limitItemsTo: number = new defaults().limitItemsTo;\r\n\r\n    /**\r\n     * @name displayBy\r\n     */\r\n    @Input() public displayBy = new defaults().displayBy;\r\n\r\n    /**\r\n     * @name identifyBy\r\n     */\r\n    @Input() public identifyBy = new defaults().identifyBy;\r\n\r\n    /**\r\n     * @description a function a developer can use to implement custom matching for the autocomplete\r\n     * @name matchingFn\r\n     */\r\n    @Input() public matchingFn: (value: string, target: TagModel) => boolean = new defaults().matchingFn;\r\n\r\n    /**\r\n     * @name appendToBody\r\n     * @type {boolean}\r\n     */\r\n    @Input() public appendToBody = new defaults().appendToBody;\r\n\r\n    /**\r\n     * @name keepOpen\r\n     * @description option to leave dropdown open when adding a new item\r\n     * @type {boolean}\r\n     */\r\n    @Input() public keepOpen = new defaults().keepOpen;\r\n\r\n    /**\r\n  * - desc minimum text length in order to display the autocomplete dropdown\r\n  * @name minimumTextLength\r\n  */\r\n    @Input() public lookUpCallEnabled = new defaults().lookUpCallEnabled;\r\n\r\n    /**\r\n     * list of items that match the current value of the input (for autocomplete)\r\n     * @name items\r\n     * @type {TagModel[]}\r\n     */\r\n    public items: TagModel[] = [];\r\n\r\n    /**\r\n     * @name tagInput\r\n     */\r\n    public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\r\n\r\n    /**\r\n     * @name _autocompleteItems\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    private _autocompleteItems: TagModel[] = [];\r\n\r\n    /**\r\n     * @name autocompleteItems\r\n     * @param items\r\n     */\r\n    public set autocompleteItems(items: TagModel[]) {\r\n        this._autocompleteItems = items;\r\n    }\r\n\r\n    /**\r\n     * @name autocompleteItems\r\n     * @desc array of items that will populate the autocomplete\r\n     * @type {Array<string>}\r\n     */\r\n    @Input() public get autocompleteItems(): TagModel[] {\r\n        const items = this._autocompleteItems;\r\n\r\n        if (!items) {\r\n            return [];\r\n        }\r\n\r\n        return items.map((item: TagModel) => {\r\n            if (typeof item === 'string') {\r\n                return {\r\n                    [this.displayBy]: item,\r\n                    [this.identifyBy]: item,\r\n                    checked: false\r\n                };\r\n            } else {\r\n               //  item['checked'] = false;\r\n                item['checked'] = item['checked'] ? item['checked'] : item['checked'] = false;\r\n                return item;\r\n            }\r\n            // return typeof item === 'string' ? {\r\n            //     [this.displayBy]: item,\r\n            //     [this.identifyBy]: item,\r\n            //     checked: false\r\n            // } : item;\r\n        });\r\n    }\r\n\r\n    constructor(private readonly injector: Injector) { }\r\n\r\n    /**\r\n     * @name ngOnInit\r\n     */\r\n    public ngOnInit(): void {\r\n        this.onItemClicked().subscribe(this.requestAdding);\r\n\r\n        // reset itemsMatching array when the dropdown is hidden\r\n        this.onHide().subscribe(this.resetItems);\r\n\r\n        const DEBOUNCE_TIME = 200;\r\n\r\n        this.tagInput.onTextChange\r\n            .debounceTime(DEBOUNCE_TIME)\r\n            .filter((value: string) => {\r\n                if (this.keepOpen === false) {\r\n                    return value.length > 0;\r\n                }\r\n                return true;\r\n            })\r\n            .subscribe(this.show);\r\n    }\r\n\r\n    /**\r\n     * @name updatePosition\r\n     */\r\n    public updatePosition(): void {\r\n        const position = this.tagInput.inputForm.getElementPosition();\r\n\r\n        this.dropdown.menu.updatePosition(position);\r\n    }\r\n\r\n    /**\r\n     * @name isVisible\r\n     * @returns {boolean}\r\n     */\r\n    public get isVisible(): boolean {\r\n        return this.dropdown.menu.state.menuState.isVisible;\r\n    }\r\n\r\n    /**\r\n     * @name onHide\r\n     * @returns {EventEmitter<Ng2Dropdown>}\r\n     */\r\n    public onHide(): EventEmitter<Ng2Dropdown> {\r\n        return this.dropdown.onHide;\r\n    }\r\n\r\n    /**\r\n     * @name onItemClicked\r\n     * @returns {EventEmitter<string>}\r\n     */\r\n    public onItemClicked(): EventEmitter<string> {\r\n        return this.dropdown.onItemClicked;\r\n    }\r\n\r\n    /**\r\n     * @name selectedItem\r\n     * @returns {Ng2MenuItem}\r\n     */\r\n    public get selectedItem(): Ng2MenuItem {\r\n        return this.dropdown.menu.state.dropdownState.selectedItem;\r\n    }\r\n\r\n    /**\r\n     * @name state\r\n     * @returns {DropdownStateService}\r\n     */\r\n    public get state(): any {\r\n        return this.dropdown.menu.state;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @name show\r\n     */\r\n    public show = (): void => {\r\n        const value = this.getFormValue();\r\n        const hasMinimumText = value.trim().length >= this.minimumTextLength;\r\n        const position = this.calculatePosition();\r\n        const items = this.getMatchingItems(value);\r\n        const hasItems = items.length > 0;\r\n        const isHidden = this.isVisible === false;\r\n        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\r\n        const assertions = [];\r\n\r\n        const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\r\n        const shouldHide = this.isVisible && !hasItems;\r\n\r\n        if (this.autocompleteObservable && hasMinimumText) {\r\n            return this.getItemsFromObservable(value);\r\n        }\r\n\r\n        if (!this.showDropdownIfEmpty && !value) {\r\n            return this.dropdown.hide();\r\n        }\r\n\r\n        if (this.tagInput.tags.length >= 0) {\r\n            this.tagInput.tags.forEach((tag, index) => {\r\n                if (tag.model['checked'] == true) {\r\n                    const checkedItem: any = items.find(x => {\r\n                        return x[this.displayBy] == tag.model[this.displayBy];\r\n                    });\r\n                    if (checkedItem !== undefined) {\r\n                        items[items.indexOf(checkedItem)]['checked'] = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this.setItems(items);\r\n\r\n        if (shouldShow) {\r\n            this.dropdown.show(position);\r\n        } else if (shouldHide) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name hide\r\n     */\r\n    public hide(): void {\r\n        this.resetItems();\r\n        this.dropdown.hide();\r\n    }\r\n\r\n    /**\r\n     * @name scrollListener\r\n     */\r\n    @HostListener('window:scroll')\r\n    public scrollListener(): void {\r\n        if (!this.isVisible) {\r\n            return;\r\n        }\r\n\r\n        this.updatePosition();\r\n    }\r\n\r\n    /**\r\n     * @name onWindowBlur\r\n     */\r\n    @HostListener('window:blur')\r\n    public onWindowBlur(): void {\r\n        this.dropdown.hide();\r\n    }\r\n\r\n    /**\r\n     * @name getFormValue\r\n     */\r\n    private getFormValue(): string {\r\n        return this.tagInput.formValue.trim();\r\n    }\r\n\r\n    /**\r\n     * @name calculatePosition\r\n     */\r\n    private calculatePosition(): ClientRect {\r\n        return this.tagInput.inputForm.getElementPosition();\r\n    }\r\n\r\n    /**\r\n     * @name requestAdding\r\n     * @param item {Ng2MenuItem}\r\n     */\r\n    private requestAdding = (item: Ng2MenuItem): void => {\r\n        this.tagInput.onAddingRequested(true, this.createTagModel(item));\r\n    }\r\n\r\n    /**\r\n     * @name createTagModel\r\n     * @param item\r\n     * @return {TagModel}\r\n     */\r\n    private createTagModel(item: Ng2MenuItem): TagModel {\r\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\r\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\r\n\r\n        return {\r\n            ...item.value,\r\n            [this.tagInput.displayBy]: display,\r\n            [this.tagInput.identifyBy]: value\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param value {string}\r\n     * @returns {any}\r\n     */\r\n    private getMatchingItems(value: string): TagModel[] {\r\n        if (!value && !this.showDropdownIfEmpty) {\r\n            return [];\r\n        }\r\n        // New property added by Nishit\r\n        if (!value && this.lookUpCallEnabled) {\r\n            this.autocompleteItems = this.tagInput.items;\r\n        }\r\n        const dupesAllowed = this.tagInput.allowDupes;\r\n\r\n        return this.autocompleteItems\r\n            .filter((item: TagModel) => {\r\n\r\n                const hasValue: boolean = dupesAllowed ? true : this.tagInput.tags.some(tag => {\r\n                    const identifyBy = this.tagInput.identifyBy;\r\n\r\n                    const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\r\n\r\n                    return model === item[this.identifyBy];\r\n                });\r\n                return this.matchingFn(value, item); // && hasValue === false\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name setItems\r\n     */\r\n    private setItems(items: TagModel[]): void {\r\n        this.items = items.slice(0, this.limitItemsTo || items.length);\r\n    }\r\n\r\n    /**\r\n     * @name resetItems\r\n     */\r\n    private resetItems = (): void => {\r\n        this.items = [];\r\n    }\r\n\r\n    /**\r\n     * @name populateItems\r\n     * @param data\r\n     */\r\n    private populateItems(data: any): TagInputDropdown {\r\n        this.autocompleteItems = data.map(item => {\r\n            return typeof item === 'string' ? {\r\n                [this.displayBy]: item,\r\n                [this.identifyBy]: item\r\n            } : item;\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @name getItemsFromObservable\r\n     * @param text\r\n     */\r\n    private getItemsFromObservable = (text: string): void => {\r\n        this.setLoadingState(true);\r\n\r\n        const subscribeFn = (data: any[]) => {\r\n            // hide loading animation\r\n            this.setLoadingState(false)\r\n                // add items\r\n                .populateItems(data);\r\n\r\n            this.setItems(this.getMatchingItems(text));\r\n\r\n            if (this.items.length) {\r\n                this.dropdown.show(this.calculatePosition());\r\n            } else if (!this.showDropdownIfEmpty && this.isVisible) {\r\n                // this.dropdown.hide();\r\n            }\r\n        };\r\n\r\n        this.autocompleteObservable(text)\r\n            .first()\r\n            .subscribe(subscribeFn, () => this.setLoadingState(false));\r\n    }\r\n\r\n    /**\r\n     * @name setLoadingState\r\n     * @param state\r\n     * @return {TagInputDropdown}\r\n     */\r\n    private setLoadingState(state: boolean): TagInputDropdown {\r\n        this.tagInput.isLoading = state;\r\n\r\n        return this;\r\n    }\r\n\r\n    onItemChecked(event) {\r\n        event.value.checked = !event.value.checked;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/dropdown/tag-input-dropdown.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'delete-icon',\r\n    templateUrl: './icon.html',\r\n    styleUrls: ['./icon.scss']\r\n})\r\nexport class DeleteIconComponent {}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/icon/icon.ts","export * from './icon';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/icon/index.ts","export * from './tag-input-form.component';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag-input-form/index.ts","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'tag-input-form',\r\n    styleUrls: ['./tag-input-form.style.scss'],\r\n    templateUrl: './tag-input-form.template.html'\r\n})\r\nexport class TagInputForm {\r\n    /**\r\n     * @name onSubmit\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onBlur\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeyup\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeydown\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    // inputs\r\n\r\n    /**\r\n     * @name placeholder\r\n     * @type {string}\r\n     */\r\n    @Input() public placeholder: string;\r\n\r\n    /**\r\n     * @name validators\r\n     * @type {ValidatorFn[]}\r\n     */\r\n    @Input() public validators: ValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     * @type {Array}\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name inputId\r\n     * @type {string}\r\n     */\r\n    @Input() public inputId: string;\r\n\r\n    /**\r\n     * @name inputClass\r\n     * @type {string}\r\n     */\r\n    @Input() public inputClass: string;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input() public get inputText(): string {\r\n        return this.inputTextValue;\r\n    }\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     * @type {string}\r\n     */\r\n    @Input() public tabindex = '';\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text {string}\r\n     */\r\n    public set inputText(text: string) {\r\n        this.inputTextValue = text;\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    /**\r\n     * @name input\r\n     */\r\n    @ViewChild('input') public input;\r\n\r\n    /**\r\n     * @name form\r\n     */\r\n    public form: FormGroup;\r\n\r\n    /**\r\n     * @name inputTextChange\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * @name inputTextValue\r\n     */\r\n    public inputTextValue = '';\r\n\r\n    public ngOnInit() {\r\n        // creating form\r\n        this.form = new FormGroup({\r\n            item: new FormControl({ value: '', disabled: this.disabled }, this.validators, this.asyncValidators)\r\n        });\r\n    }\r\n\r\n\t/**\r\n     * @name value\r\n     * @returns {AbstractControl}\r\n     */\r\n    public get value(): AbstractControl | null {\r\n        return this.form.get('item');\r\n    }\r\n\r\n\t/**\r\n     * @name isInputFocused\r\n     * @returns {boolean}\r\n     */\r\n    public isInputFocused(): boolean {\r\n        return document.activeElement === this.input.nativeElement;\r\n    }\r\n\r\n\t/**\r\n     * @name getErrorMessages\r\n     * @param messages\r\n     * @returns {string[]}\r\n     */\r\n    public getErrorMessages(messages): string[] {\r\n        const value = this.value;\r\n\r\n        return value ? Object.keys(messages)\r\n            .filter(err => value.hasError(err))\r\n            .map(err => messages[err]) : [];\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     * @returns {boolean}\r\n     */\r\n    public hasErrors(): boolean {\r\n        return this.form.dirty &&\r\n            this.form.value.item &&\r\n            this.form.invalid;\r\n    }\r\n\r\n\t/**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.input.nativeElement.focus();\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.input.nativeElement.blur();\r\n    }\r\n\r\n\t/**\r\n     * @name getElementPosition\r\n     * @returns {ClientRect}\r\n     */\r\n    public getElementPosition(): ClientRect {\r\n        return this.input.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * - removes input from the component\r\n     * @name destroy\r\n     */\r\n    public destroy(): void {\r\n        const input = this.input.nativeElement;\r\n        input.parentElement.removeChild(input);\r\n    }\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @param $event\r\n     */\r\n    public onKeyDown($event) {\r\n        return this.onKeydown.emit($event);\r\n    }\r\n\r\n    /**\r\n     * @name submit\r\n     */\r\n    public submit($event: any): void {\r\n        this.onSubmit.emit($event);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag-input-form/tag-input-form.component.ts","import {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state,\r\n    AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\n/**\r\n * @name animations\r\n * @return {AnimationTriggerMetadata[]}\r\n */\r\nexport const animations = [\r\n    trigger('animation', [\r\n        state('in', style({\r\n            opacity: 1\r\n        })),\r\n        state('out', style({\r\n            opacity: 0\r\n        })),\r\n        transition(':enter', [\r\n            animate(\"{{ enter }}\", keyframes([\r\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\r\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\r\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\r\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\r\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\r\n            ]))\r\n        ]),\r\n        transition(':leave', [\r\n            animate(\"{{ leave }}\", keyframes([\r\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\r\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\r\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\r\n            ]))\r\n        ])\r\n    ])\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag-input/animations.ts","export * from './tag-input';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag-input/index.ts","// angular\r\nimport {\r\n    Component,\r\n    forwardRef,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer2,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ContentChildren,\r\n    ContentChild,\r\n    OnInit,\r\n    TemplateRef,\r\n    QueryList,\r\n    AfterViewInit,\r\n    Type,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport {\r\n    AsyncValidatorFn,\r\n    FormControl,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidatorFn\r\n} from '@angular/forms';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/map';\r\n\r\n// ng2-tag-input\r\nimport {\r\n    TagInputAccessor,\r\n    TagModel,\r\n    listen,\r\n    constants\r\n} from '../../core';\r\n\r\nimport {\r\n    DragProvider,\r\n    DraggedTag,\r\n    OptionsProvider,\r\n    TagInputOptions\r\n} from '../../core/providers';\r\n\r\nimport {\r\n    TagInputForm,\r\n    TagInputDropdown,\r\n    TagComponent\r\n} from '../../components';\r\n\r\nimport { animations } from './animations';\r\n\r\n// angular universal hacks\r\n/* tslint:disable-next-line */\r\nconst DragEvent = (global as any).DragEvent;\r\n\r\nconst CUSTOM_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\n\r\nconst defaults: Type<TagInputOptions> = forwardRef(() => OptionsProvider.defaults.tagInput);\r\n\r\n@Component({\r\n    selector: 'tag-input',\r\n    providers: [CUSTOM_ACCESSOR],\r\n    styleUrls: ['./tag-input.style.scss'],\r\n    templateUrl: './tag-input.template.html',\r\n    animations\r\n})\r\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\r\n\r\n    @Input() displayInlineTags = true;\r\n\r\n    /**\r\n     * @name separatorKeys\r\n     * @desc keyboard keys with which a user can separate items\r\n     * @type {Array}\r\n     */\r\n    @Input() public separatorKeys: string[] = new defaults().separatorKeys;\r\n\r\n    /**\r\n     * @name separatorKeyCodes\r\n     * @desc keyboard key codes with which a user can separate items\r\n     * @type {Array}\r\n     */\r\n    @Input() public separatorKeyCodes: number[] = new defaults().separatorKeyCodes;\r\n\r\n    /**\r\n     * @name placeholder\r\n     * @desc the placeholder of the input text\r\n     * @type {string}\r\n     */\r\n    @Input() public placeholder: string = new defaults().placeholder;\r\n\r\n    /**\r\n     * @name secondaryPlaceholder\r\n     * @desc placeholder to appear when the input is empty\r\n     * @type {string}\r\n     */\r\n    @Input() public secondaryPlaceholder: string = new defaults().secondaryPlaceholder;\r\n\r\n    /**\r\n     * @name maxItems\r\n     * @desc maximum number of items that can be added\r\n     * @type {number}\r\n     */\r\n    @Input() public maxItems: number = new defaults().maxItems;\r\n\r\n    /**\r\n     * @name validators\r\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\r\n     * @type {Validators[]}\r\n     */\r\n    @Input() public validators: ValidatorFn[] = new defaults().validators;\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     * @type {Array}\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = new defaults().asyncValidators;\r\n\r\n    /**\r\n    * - if set to true, it will only possible to add items from the autocomplete\r\n    * @name onlyFromAutocomplete\r\n    * @type {Boolean}\r\n    */\r\n    @Input() public onlyFromAutocomplete = new defaults().onlyFromAutocomplete;\r\n\r\n\t/**\r\n     * @name errorMessages\r\n     * @type {Map<string, string>}\r\n     */\r\n    @Input() public errorMessages: { [key: string]: string } = new defaults().errorMessages;\r\n\r\n    /**\r\n     * @name theme\r\n     * @type {string}\r\n     */\r\n    @Input() public theme: string = new defaults().theme;\r\n\r\n    /**\r\n     * @name onTextChangeDebounce\r\n     * @type {number}\r\n     */\r\n    @Input() public onTextChangeDebounce = new defaults().onTextChangeDebounce;\r\n\r\n    /**\r\n     * - custom id assigned to the input\r\n     * @name id\r\n     */\r\n    @Input() public inputId: string = new defaults().inputId;\r\n\r\n    /**\r\n     * - custom class assigned to the input\r\n     */\r\n    @Input() public inputClass: string = new defaults().inputClass;\r\n\r\n    /**\r\n     * - option to clear text input when the form is blurred\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public clearOnBlur: boolean = new defaults().clearOnBlur;\r\n\r\n    /**\r\n     * - hideForm\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public hideForm: boolean = new defaults().hideForm;\r\n\r\n    /**\r\n     * @name addOnBlur\r\n     */\r\n    @Input() public addOnBlur: boolean = new defaults().addOnBlur;\r\n\r\n    /**\r\n     * @name addOnPaste\r\n     */\r\n    @Input() public addOnPaste: boolean = new defaults().addOnPaste;\r\n\r\n    /**\r\n     * - pattern used with the native method split() to separate patterns in the string pasted\r\n     * @name pasteSplitPattern\r\n     */\r\n    @Input() public pasteSplitPattern = new defaults().pasteSplitPattern;\r\n\r\n    /**\r\n     * @name blinkIfDupe\r\n     * @type {boolean}\r\n     */\r\n    @Input() public blinkIfDupe = new defaults().blinkIfDupe;\r\n\r\n    /**\r\n     * @name removable\r\n     * @type {boolean}\r\n     */\r\n    @Input() public removable = new defaults().removable;\r\n\r\n    /**\r\n     * @name editable\r\n     * @type {boolean}\r\n     */\r\n    @Input() public editable: boolean = new defaults().editable;\r\n\r\n    /**\r\n     * @name allowDupes\r\n     * @type {boolean}\r\n     */\r\n    @Input() public allowDupes = new defaults().allowDupes;\r\n\r\n    /**\r\n     * @description if set to true, the newly added tags will be added as strings, and not objects\r\n     * @name modelAsStrings\r\n     * @type {boolean}\r\n     */\r\n    @Input() public modelAsStrings = new defaults().modelAsStrings;\r\n\r\n    /**\r\n     * @name trimTags\r\n     * @type {boolean}\r\n     */\r\n    @Input() public trimTags = new defaults().trimTags;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input() public get inputText(): string {\r\n        return this.inputTextValue;\r\n    }\r\n\r\n    @Input() public set resetInputText(value: boolean) {\r\n        this.inputText = '';\r\n        this.cdr.detectChanges();\r\n        setTimeout(() => {\r\n            this.dropdown.hide();\r\n        }, 500);\r\n    }\r\n\r\n    /**\r\n     * @name ripple\r\n     * @type {boolean}\r\n     */\r\n    @Input() public ripple: boolean = new defaults().ripple;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     * @type {string}\r\n     */\r\n    @Input() public tabindex: string = new defaults().tabIndex;\r\n\r\n    /**\r\n     * @name disable\r\n     * @type {boolean}\r\n     */\r\n    @Input() public disable: boolean = new defaults().disable;\r\n\r\n    /**\r\n     * @name dragZone\r\n     * @type {string}\r\n     */\r\n    @Input() public dragZone: string = new defaults().dragZone;\r\n\r\n    /**\r\n     * @name onRemoving\r\n     * @type {() => Observable<void>}\r\n     */\r\n    @Input() public onRemoving = new defaults().onRemoving;\r\n\r\n    /**\r\n     * @name onAdding\r\n     * @type {() => Observable<void>}\r\n     */\r\n    @Input() public onAdding = new defaults().onAdding;\r\n\r\n    /**\r\n     * @name animationDuration\r\n     */\r\n    @Input() public animationDuration = new defaults().animationDuration;\r\n\r\n    /**\r\n     * @name onAdd\r\n     * @desc event emitted when adding a new item\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onAdd = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @desc event emitted when removing an existing item\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onRemove = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @desc event emitted when selecting an item\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onSelect = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is focused\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onFocus = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is blurred\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onBlur = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onTextChange\r\n     * @desc event emitted when the input value changes\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onTextChange = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when text is pasted in the form\r\n     * @name onPaste\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onPaste = new EventEmitter<string>();\r\n\r\n    /**\r\n     * - output triggered when tag entered is not valid\r\n     * @name onValidationError\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    @Output() public onValidationError = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when tag is edited\r\n     * @name onTagEdited\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name dropdown\r\n     */\r\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\r\n\r\n    /**\r\n     * @name template\r\n     * @desc reference to the template if provided by the user\r\n     * @type {TemplateRef}\r\n     */\r\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\r\n\r\n\t/**\r\n     * @name inputForm\r\n     * @type {TagInputForm}\r\n     */\r\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\r\n\r\n    /**\r\n     * @name selectedTag\r\n     * @desc reference to the current selected tag\r\n     * @type {String}\r\n     */\r\n    public selectedTag: TagModel | undefined;\r\n\r\n    /**\r\n     * @name isLoading\r\n     * @type {boolean}\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text\r\n     */\r\n    public set inputText(text: string) {\r\n        this.inputTextValue = text;\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    /**\r\n     * @name tags\r\n     * @desc list of Element items\r\n     */\r\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\r\n\r\n    /**\r\n     * @name listeners\r\n     * @desc array of events that get fired using @fireEvents\r\n     * @type []\r\n     */\r\n    private listeners = {\r\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\r\n        [constants.KEYUP]: <{ (fun): any }[]>[]\r\n    };\r\n\r\n    /**\r\n     * @description emitter for the 2-way data binding inputText value\r\n     * @name inputTextChange\r\n     * @type {EventEmitter}\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * @description private variable to bind get/set\r\n     * @name inputTextValue\r\n     * @type {string}\r\n     */\r\n    public inputTextValue = '';\r\n\r\n    /**\r\n     * @desc removes the tab index if it is set - it will be passed through to the input\r\n     * @name tabindexAttr\r\n     * @type {string}\r\n     */\r\n    @HostBinding('attr.tabindex')\r\n    public get tabindexAttr(): string {\r\n        return this.tabindex !== '' ? '-1' : '';\r\n    }\r\n\r\n    /**\r\n     * @name animationMetadata\r\n     */\r\n    public animationMetadata: { value: string, params: object };\r\n\r\n    constructor(private readonly renderer: Renderer2,\r\n        public readonly dragProvider: DragProvider,\r\n        private cdr: ChangeDetectorRef) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @name ngAfterViewInit\r\n     */\r\n    public ngAfterViewInit(): void {\r\n        // set up listeners\r\n\r\n        this.setUpKeypressListeners();\r\n        this.setupSeparatorKeysListener();\r\n        this.setUpInputKeydownListeners();\r\n\r\n        if (this.onTextChange.observers.length) {\r\n            this.setUpTextChangeSubscriber();\r\n        }\r\n\r\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\r\n        if (this.clearOnBlur || this.addOnBlur) {\r\n            this.setUpOnBlurSubscriber();\r\n        }\r\n\r\n        // if addOnPaste is set to true, register the handler and add items\r\n        if (this.addOnPaste) {\r\n            this.setUpOnPasteListener();\r\n        }\r\n\r\n        // if hideForm is set to true, remove the input\r\n        if (this.hideForm) {\r\n            this.inputForm.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name ngOnInit\r\n     */\r\n    public ngOnInit(): void {\r\n        // if the number of items specified in the model is > of the value of maxItems\r\n        // degrade gracefully and let the max number of items to be the number of items in the model\r\n        // though, warn the user.\r\n        const hasReachedMaxItems = this.maxItems !== undefined &&\r\n            this.items &&\r\n            this.items.length > this.maxItems;\r\n\r\n        if (hasReachedMaxItems) {\r\n            this.maxItems = this.items.length;\r\n            console.warn(constants.MAX_ITEMS_WARNING);\r\n        }\r\n\r\n        // Setting editable to false to fix problem with tags in IE still being editable when\r\n        // onlyFromAutocomplete is true\r\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\r\n\r\n        this.setAnimationMetadata();\r\n    }\r\n\r\n    /**\r\n     * @name onRemoveRequested\r\n     * @param tag\r\n     * @param index\r\n     */\r\n    public onRemoveRequested(tag: TagModel, index: number): void {\r\n        const subscribeFn = (model: TagModel) => this.removeItem(model, index);\r\n\r\n        this.onRemoving ?\r\n            this.onRemoving(tag)\r\n                .first()\r\n                .subscribe(subscribeFn) : subscribeFn(tag);\r\n    }\r\n\r\n    /**\r\n     * @name onAddingRequested\r\n     * @param fromAutocomplete {boolean}\r\n     * @param tag {TagModel}\r\n     */\r\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel, index?: number): void {\r\n\r\n        if (!tag) {\r\n            return;\r\n        }\r\n\r\n        const subscribeFn = (model: TagModel) => {\r\n            return this.addItem(fromAutocomplete, model, index);\r\n        };\r\n\r\n        this.onAdding ?\r\n            this.onAdding(tag)\r\n                .first()\r\n                .subscribe(subscribeFn) : subscribeFn(tag);\r\n    }\r\n\r\n    /**\r\n     * @name appendTag\r\n     * @param tag {TagModel}\r\n     */\r\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\r\n\r\n        const items = this.items;\r\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\r\n        model.checked = true;\r\n        this.items = [\r\n            ...items.slice(0, index),\r\n            model,\r\n            ...items.slice(index, items.length)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @name createTag\r\n     * @param model\r\n     * @returns {{}}\r\n     */\r\n    public createTag = (model: TagModel): TagModel => {\r\n        const trim = (val: TagModel, key: string): TagModel => {\r\n            return typeof val === 'string' ? val.trim() : val[key];\r\n        };\r\n\r\n        return {\r\n            ...typeof model !== 'string' ? model : {},\r\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\r\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @name selectItem\r\n     * @desc selects item passed as parameter as the selected tag\r\n     * @param item\r\n     * @param emit\r\n     */\r\n    public selectItem(item: TagModel | undefined, emit = true): void {\r\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\r\n\r\n        if (isReadonly || this.selectedTag === item) {\r\n            return;\r\n        }\r\n\r\n        this.selectedTag = item;\r\n\r\n        if (emit) {\r\n            this.onSelect.emit(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name fireEvents\r\n     * @desc goes through the list of the events for a given eventName, and fires each of them\r\n     * @param eventName\r\n     * @param $event\r\n     */\r\n    public fireEvents(eventName: string, $event?): void {\r\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\r\n    }\r\n\r\n    /**\r\n     * @name handleKeydown\r\n     * @desc handles action when the user hits a keyboard key\r\n     * @param data\r\n     */\r\n    public handleKeydown(data: any): void {\r\n        const event = data.event;\r\n        const key = event.keyCode || event.which;\r\n\r\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\r\n            case constants.ACTIONS_KEYS.DELETE:\r\n                if (this.selectedTag && this.removable) {\r\n                    const index = this.items.indexOf(this.selectedTag);\r\n                    this.onRemoveRequested(this.selectedTag, index);\r\n                }\r\n                break;\r\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\r\n                this.moveToTag(data.model, constants.PREV);\r\n                break;\r\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\r\n                this.moveToTag(data.model, constants.NEXT);\r\n                break;\r\n            case constants.ACTIONS_KEYS.TAB:\r\n                this.moveToTag(data.model, constants.NEXT);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // prevent default behaviour\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @name setInputValue\r\n     * @param value\r\n     * @returns {string}\r\n     */\r\n    public setInputValue(value: string): void {\r\n        const control = this.getControl();\r\n\r\n        // update form value with the transformed item\r\n        control.setValue(value);\r\n    }\r\n\r\n    /**\r\n     * @name getControl\r\n     * @returns {FormControl}\r\n     */\r\n    private getControl(): FormControl {\r\n        return <FormControl>this.inputForm.value;\r\n    }\r\n\r\n\t/**\r\n     * @name focus\r\n     * @param applyFocus\r\n     * @param displayAutocomplete\r\n     */\r\n    public focus(applyFocus = false, displayAutocomplete = false): void {\r\n        if (this.dragProvider.getState('dragging')) {\r\n            return;\r\n        }\r\n\r\n        this.selectItem(undefined, false);\r\n\r\n        if (applyFocus) {\r\n            this.inputForm.focus();\r\n            this.onFocus.emit(this.formValue);\r\n        }\r\n    }\r\n\r\n\t/**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.onTouched();\r\n        this.onBlur.emit(this.formValue);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     * @returns {boolean}\r\n     */\r\n    public hasErrors(): boolean {\r\n        return this.inputForm && this.inputForm.hasErrors();\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     * @returns {boolean}\r\n     */\r\n    public isInputFocused(): boolean {\r\n        return this.inputForm && this.inputForm.isInputFocused();\r\n    }\r\n\r\n    /**\r\n     * - this is the one way I found to tell if the template has been passed and it is not\r\n     * the template for the menu item\r\n     * @name hasCustomTemplate\r\n     */\r\n    public hasCustomTemplate(): boolean {\r\n        const template = this.templates ? this.templates.first : undefined;\r\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\r\n            this.dropdown.templates.first : undefined;\r\n\r\n        return Boolean(template && template !== menuTemplate);\r\n    }\r\n\r\n\t/**\r\n     * @name maxItemsReached\r\n     * @returns {boolean}\r\n     */\r\n    public get maxItemsReached(): boolean {\r\n        return this.maxItems !== undefined &&\r\n            this.items.length >= this.maxItems;\r\n    }\r\n\r\n    /**\r\n     * @name formValue\r\n     * @return {any}\r\n     */\r\n    public get formValue(): string {\r\n        const form = this.inputForm.value;\r\n\r\n        return form ? form.value : '';\r\n    }\r\n\r\n    /**3\r\n     * @name onDragStarted\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\r\n        event.stopPropagation();\r\n\r\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\r\n\r\n        this.dragProvider.setSender(this);\r\n        this.dragProvider.setDraggedItem(event, item);\r\n        this.dragProvider.setState({ dragging: true, index });\r\n    }\r\n\r\n    /**\r\n     * @name onDragOver\r\n     * @param event\r\n     */\r\n    public onDragOver(event: DragEvent, index?: number): void {\r\n        this.dragProvider.setState({ dropping: true });\r\n        this.dragProvider.setReceiver(this);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onTagDropped(event: DragEvent, index: number): void {\r\n        const item = this.dragProvider.getDraggedItem(event);\r\n\r\n        if (item.zone !== this.dragZone) {\r\n            return;\r\n        }\r\n\r\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @name isDropping\r\n     */\r\n    public isDropping(): boolean {\r\n        const isReceiver = this.dragProvider.receiver === this;\r\n        const isDropping = this.dragProvider.getState('dropping');\r\n\r\n        return Boolean(isReceiver && isDropping);\r\n    }\r\n\r\n    /**\r\n     * @name onTagBlurred\r\n     * @param changedElement {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public onTagBlurred(changedElement: TagModel, index: number): void {\r\n        this.items[index] = changedElement;\r\n        this.blur();\r\n    }\r\n\r\n    /**\r\n     * @name trackBy\r\n     * @param item\r\n     * @returns {string}\r\n     */\r\n    public trackBy(item: TagModel): string {\r\n        return item[this.identifyBy];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    private isTagValid(tag: TagModel, fromAutocomplete = false): boolean {\r\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\r\n\r\n        if (selectedItem && !fromAutocomplete) {\r\n            return false;\r\n        }\r\n\r\n        const dupe = this.findDupe(tag, fromAutocomplete);\r\n\r\n        // if so, give a visual cue and return false\r\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\r\n            const model = this.tags.find(intag => {\r\n                return this.getItemValue(intag.model) === this.getItemValue(dupe);\r\n            });\r\n\r\n            if (model) {\r\n                model.blink();\r\n            }\r\n        }\r\n\r\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\r\n\r\n        const assertions = [\r\n            // 1. there must be no dupe OR dupes are allowed\r\n            !dupe || this.allowDupes === true,\r\n\r\n            // 2. check max items has not been reached\r\n            this.maxItemsReached === false,\r\n\r\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\r\n            ((isFromAutocomplete) || this.onlyFromAutocomplete === false)\r\n        ];\r\n\r\n        return assertions.filter(item => item).length === assertions.length;\r\n    }\r\n\r\n    /**\r\n     * @name moveToTag\r\n     * @param item\r\n     * @param direction\r\n     */\r\n    private moveToTag(item: TagModel, direction: string): void {\r\n        const isLast = this.tags.last.model === item;\r\n        const isFirst = this.tags.first.model === item;\r\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\r\n            (direction === constants.PREV && isFirst);\r\n\r\n        if (stopSwitch) {\r\n            this.focus(true);\r\n            return;\r\n        }\r\n\r\n        const offset = direction === constants.NEXT ? 1 : -1;\r\n        const index = this.getTagIndex(item) + offset;\r\n        const tag = this.getTagAtIndex(index);\r\n\r\n        return tag.select.call(tag);\r\n    }\r\n\r\n    /**\r\n     * @name getTagIndex\r\n     * @param item\r\n     */\r\n    private getTagIndex(item: TagModel): number {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags.findIndex(tag => tag.model === item);\r\n    }\r\n\r\n    /**\r\n     * @name getTagAtIndex\r\n     * @param index\r\n     */\r\n    private getTagAtIndex(index: number) {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags[index];\r\n    }\r\n\r\n    /**\r\n     * @name removeItem\r\n     * @desc removes an item from the array of the model\r\n     * @param tag {TagModel}\r\n     * @param index {number}\r\n     */\r\n    private removeItem(tag: TagModel, index: number): void {\r\n        this.items = this.getItemsWithout(index);\r\n\r\n        // if the removed tag was selected, set it as undefined\r\n        if (this.selectedTag === tag) {\r\n            this.selectItem(undefined, false);\r\n        }\r\n\r\n        // focus input\r\n        this.focus(true, false);\r\n\r\n        // emit remove event\r\n        this.onRemove.emit(tag);\r\n    }\r\n\r\n    /**\r\n     * @name addItem\r\n     * @desc adds the current text model to the items array\r\n     * @param fromAutocomplete\r\n     * @param item\r\n     */\r\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number): void {\r\n        const model = this.getItemDisplay(item);\r\n\r\n        const indexOfModel = this.items.find(x => x[this.displayBy] == model);\r\n\r\n        if (indexOfModel != undefined) {\r\n            this.removeItem(item, this.items.indexOf(indexOfModel));\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * @name reset\r\n         */\r\n        const reset = (): void => {\r\n            // reset control and focus input\r\n            this.setInputValue(this.inputTextValue);\r\n\r\n            // focus input\r\n            this.focus(true, false);\r\n        };\r\n\r\n        /**\r\n         * @name validationFilter\r\n         * @param tag\r\n         * @return {boolean}\r\n         */\r\n        const validationFilter = (tag: TagModel): boolean => {\r\n            const isValid = this.isTagValid(tag, fromAutocomplete) && this.inputForm.form.valid;\r\n\r\n            if (!isValid) {\r\n                this.onValidationError.emit(tag);\r\n            }\r\n\r\n            return isValid;\r\n        };\r\n\r\n        /**\r\n         * @name subscribeFn\r\n         * @param tag\r\n         */\r\n        const subscribeFn = (tag: TagModel): void => {\r\n            this.appendTag(tag, index);\r\n\r\n            // emit event\r\n            this.onAdd.emit(tag);\r\n\r\n            if (!this.dropdown) {\r\n                return;\r\n            }\r\n\r\n            // this.dropdown.hide();\r\n            // this.dropdown.showDropdownIfEmpty ? this.dropdown.show() : undefined;\r\n        };\r\n\r\n        Observable\r\n            .of(model)\r\n            .first()\r\n            .filter(() => model.trim() !== '')\r\n            .map(() => item)\r\n            .map(this.createTag)\r\n            .filter(validationFilter)\r\n            .subscribe(subscribeFn, undefined, reset);\r\n    }\r\n\r\n    /**\r\n     * @name setupSeparatorKeysListener\r\n     */\r\n    private setupSeparatorKeysListener(): void {\r\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\r\n        const listener = ($event) => {\r\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\r\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\r\n\r\n            if (hasKeyCode || hasKey) {\r\n                $event.preventDefault();\r\n                this.onAddingRequested(false, this.formValue);\r\n            }\r\n        };\r\n\r\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeypressListeners\r\n     */\r\n    private setUpKeypressListeners(): void {\r\n        const listener = ($event) => {\r\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\r\n\r\n            if (isCorrectKey &&\r\n                !this.formValue &&\r\n                this.items.length) {\r\n                this.tags.last.select.call(this.tags.last);\r\n            }\r\n        };\r\n\r\n        // setting up the keypress listeners\r\n        listen.call(this, constants.KEYDOWN, listener);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeydownListeners\r\n     */\r\n    private setUpInputKeydownListeners(): void {\r\n        this.inputForm.onKeydown.subscribe(event => {\r\n            this.fireEvents('keydown', event);\r\n\r\n            if (event.key === 'Backspace' && this.formValue === '') {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnPasteListener\r\n     */\r\n    private setUpOnPasteListener(): void {\r\n        const input = this.inputForm.input.nativeElement;\r\n\r\n        // attach listener to input\r\n        this.renderer.listen(input, 'paste', this.onPasteCallback);\r\n    }\r\n\r\n    /**\r\n     * @name setUpTextChangeSubscriber\r\n     */\r\n    private setUpTextChangeSubscriber(): void {\r\n        this.inputForm.form\r\n            .valueChanges\r\n            .debounceTime(this.onTextChangeDebounce)\r\n            .map(() => this.formValue)\r\n            .subscribe((value: string) => this.onTextChange.emit(value));\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnBlurSubscriber\r\n     */\r\n    private setUpOnBlurSubscriber(): void {\r\n        const filterFn = (): boolean => {\r\n            return !(this.dropdown && this.dropdown.isVisible) && !!this.formValue;\r\n        };\r\n\r\n        this.inputForm\r\n            .onBlur\r\n            .filter(filterFn)\r\n            .subscribe(() => {\r\n                if (this.addOnBlur) {\r\n                    this.onAddingRequested(false, this.formValue);\r\n                }\r\n                this.setInputValue('');\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name findDupe\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     * @return {undefined|TagModel}\r\n     */\r\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\r\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\r\n        const id = tag[identifyBy];\r\n\r\n        return this.items.find(item => this.getItemValue(item) === id);\r\n    }\r\n\r\n    /**\r\n     * @name onPasteCallback\r\n     * @param data\r\n     */\r\n    private onPasteCallback = (data: ClipboardEvent): void => {\r\n        const text = data.clipboardData.getData('text/plain');\r\n\r\n        text.split(this.pasteSplitPattern)\r\n            .map(item => this.createTag(item))\r\n            .forEach(item => this.onAddingRequested(false, item));\r\n\r\n        this.onPaste.emit(text);\r\n\r\n        setTimeout(() => this.setInputValue(''), 0);\r\n    }\r\n\r\n    /**\r\n     * @name setAnimationMetadata\r\n     */\r\n    private setAnimationMetadata(): void {\r\n        this.animationMetadata = {\r\n            value: 'in',\r\n            params: { ...this.animationDuration }\r\n        };\r\n    }\r\n\r\n    onInputClick(event) {\r\n        this.dropdown ? this.dropdown.show() : undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag-input/tag-input.ts","import {\r\n    Component,\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'tag-ripple',\r\n    styles: [`\r\n        :host {\r\n            width: 100%;\r\n            height: 100%;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n        }\r\n        \r\n        .tag-ripple {\r\n            background: rgba(0, 0, 0, 0.1);\r\n            top: 50%;\r\n            left: 50%;\r\n            height: 100%;\r\n            transform: translate(-50%, -50%);\r\n            position: absolute;\r\n        }\r\n    `],\r\n    template: `\r\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\r\n    `,\r\n    animations: [\r\n        trigger('ink', [\r\n            state('none', style({width: 0, opacity: 0})),\r\n            transition('none => clicked', [\r\n                animate(300, keyframes([\r\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\r\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\r\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\r\n                ]))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class TagRipple {\r\n    @Input() public state: string = 'none';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag/tag-ripple.component.ts","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ElementRef,\r\n    HostListener,\r\n    HostBinding,\r\n    ViewChild,\r\n    ChangeDetectorRef,\r\n    Renderer2\r\n} from '@angular/core';\r\n\r\nimport { TagModel } from '../../core';\r\nimport { TagRipple } from '../tag';\r\n\r\n// angular universal hacks\r\n/* tslint:disable-next-line */\r\nconst KeyboardEvent = (global as any).KeyboardEvent;\r\nconst MouseEvent = (global as any).MouseEvent;\r\n\r\n// mocking navigator\r\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\r\n    userAgent: 'Chrome',\r\n    vendor: 'Google Inc'\r\n};\r\n\r\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n@Component({\r\n    selector: 'tag',\r\n    templateUrl: './tag.template.html',\r\n    styleUrls: [ './tag-component.style.scss' ]\r\n})\r\nexport class TagComponent {    \r\n    /**\r\n     * @name model {TagModel}\r\n     */\r\n    @Input() public model: TagModel;\r\n\r\n    /**\r\n     * @name removable {boolean}\r\n     */\r\n    @Input() public removable: boolean;\r\n\r\n    /**\r\n     * @name editable {boolean}\r\n     */\r\n    @Input() public editable: boolean;\r\n\r\n    /**\r\n     * @name template {TemplateRef<any>}\r\n     */\r\n    @Input() public template: TemplateRef<any>;\r\n\r\n    /**\r\n     * @name displayBy {string}\r\n     */\r\n    @Input() public displayBy: string;\r\n\r\n    /**\r\n     * @name identifyBy {string}\r\n     */\r\n    @Input() public identifyBy: string;\r\n\r\n    /**\r\n     * @name index {number}\r\n     */\r\n    @Input() public index: number;\r\n\r\n    /**\r\n     * @name hasRipple\r\n     */\r\n    @Input() public hasRipple: boolean;\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onBlur\r\n     * @type {EventEmitter<TagModel>}\r\n     */\r\n    @Output() public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @type {EventEmitter<any>}\r\n     */\r\n    @Output() public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @name onTagEdited\r\n     * @type {EventEmitter<any>}\r\n     */\r\n    @Output() public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name readonly {boolean}\r\n     */\r\n    public get readonly(): boolean {\r\n        return typeof this.model !== 'string' && this.model.readonly === true;\r\n    };\r\n\r\n    /**\r\n     * @name editing\r\n     * @type {boolean}\r\n     */\r\n    public editing = false;\r\n\r\n    /**\r\n     * @name moving\r\n     * @type {boolean}\r\n     */\r\n    @HostBinding('class.moving') public moving: boolean;\r\n\r\n    /**\r\n     * @name rippleState\r\n     * @type {string}\r\n     */\r\n    public rippleState = 'none';\r\n\r\n    /**\r\n     * @name ripple {TagRipple}\r\n     */\r\n    @ViewChild(TagRipple) public ripple: TagRipple;\r\n\r\n    constructor(public element: ElementRef,\r\n                public renderer: Renderer2,\r\n                private cdRef: ChangeDetectorRef) {}\r\n\r\n    /**\r\n     * @name select\r\n     */\r\n    public select($event?: MouseEvent): void {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this.onSelect.emit(this.model);\r\n    }\r\n\r\n    /**\r\n     * @name remove\r\n     */\r\n    public remove($event: MouseEvent): void {\r\n        $event.stopPropagation();\r\n        this.onRemove.emit(this);\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.element.nativeElement.focus();\r\n    }\r\n\r\n    public move(): void {\r\n        this.moving = true;\r\n    }\r\n\r\n    /**\r\n     * @name keydown\r\n     * @param event\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n    public keydown(event: KeyboardEvent): void {\r\n        if (this.editing) {\r\n            event.keyCode === 13 ? this.disableEditMode(event) : undefined;\r\n            return;\r\n        }\r\n\r\n        this.onKeyDown.emit({event, model: this.model});\r\n    }\r\n\r\n    /**\r\n     * @name blink\r\n     */\r\n    public blink(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('blink');\r\n\r\n        setTimeout(() => classList.remove('blink'), 50);\r\n    }\r\n\r\n    /**\r\n     * @name toggleEditMode\r\n     */\r\n    public toggleEditMode(): void {\r\n        if (this.editable) {\r\n            this.editing ? undefined : this.activateEditMode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onBlurred\r\n     * @param event\r\n     */\r\n    public onBlurred(event: any): void {\r\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\r\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\r\n\t\tif (!this.editable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        const value: string = event.target.innerText;\r\n        const result = typeof this.model === 'string' ? value :\r\n            {[this.identifyBy]: value, [this.displayBy]: value};\r\n\r\n        this.disableEditMode();\r\n\r\n        this.onBlur.emit(result);\r\n    }\r\n\r\n    /**\r\n     * @name getDisplayValue\r\n     * @param item\r\n     * @returns {string}\r\n     */\r\n    public getDisplayValue(item: TagModel): string {\r\n        return typeof item === 'string' ? item : item[this.displayBy];\r\n    }\r\n\r\n    /**\r\n     * @desc returns whether the ripple is visible or not\r\n     * only works in Chrome\r\n     * @name isRippleVisible\r\n     * @returns {boolean}\r\n     */\r\n    public get isRippleVisible(): boolean {\r\n        return !this.readonly &&\r\n            !this.editing &&\r\n            isChrome &&\r\n            this.hasRipple;\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditableText\r\n     * @returns {string}\r\n     */\r\n    private getContentEditableText(): string {\r\n        const input = this.getContentEditable();\r\n\r\n        return input ? input.innerText.trim() : '';\r\n    }\r\n\r\n    /**\r\n     * @name setContentEditableText\r\n     * @param model\r\n     */\r\n    private setContentEditableText(model: TagModel) {\r\n        const input = this.getContentEditable();\r\n        const value = this.getDisplayValue(model);\r\n\r\n        input.innerText = value;\r\n    }\r\n\r\n    /**\r\n     * @name\r\n     */\r\n    private activateEditMode(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('tag--editing');\r\n\r\n        this.editing = true;\r\n    }\r\n\r\n    /**\r\n     * @name disableEditMode\r\n     * @param $event\r\n     */\r\n    private disableEditMode($event?: KeyboardEvent): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        const input = this.getContentEditableText();\r\n        \r\n        this.editing = false;\r\n        classList.remove('tag--editing');\r\n\r\n        if (!input) {\r\n            this.setContentEditableText(this.model);\r\n            return;\r\n        }\r\n\r\n        this.storeNewValue(input);\r\n        this.cdRef.detectChanges();\r\n\r\n        if ($event) {\r\n            $event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name storeNewValue\r\n     * @param input\r\n     */\r\n    private storeNewValue(input: string): void {\r\n        const exists = (model: TagModel) => {\r\n            return typeof model === 'string' ?\r\n                model === input :\r\n                model[this.displayBy] === input;\r\n        };\r\n\r\n        // if the value changed, replace the value in the model\r\n        if (exists(this.model) === false) {\r\n            const model = typeof this.model === 'string' ? input :\r\n                {[this.identifyBy]: input, [this.displayBy]: input};\r\n\r\n            // emit output\r\n            this.model = model;\r\n            this.onTagEdited.emit(model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditable\r\n     */\r\n    private getContentEditable(): HTMLInputElement {\r\n        return this.element.nativeElement.querySelector('[contenteditable]');\r\n    }\r\n\r\n    /**\r\n     * @name isDeleteIconVisible\r\n     * @returns {boolean}\r\n     */\r\n    private isDeleteIconVisible(): boolean {\r\n        return !this.readonly &&\r\n                !this.disabled &&\r\n                this.removable &&\r\n                !this.editing;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/components/tag/tag.component.ts","import { defaults } from './../defaults';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Input } from '@angular/core';\r\nimport { OptionsProvider } from './providers';\r\n\r\nexport type TagModel = string | {[key: string]: any};\r\n\r\nexport function isObject(obj: any): boolean {\r\n    return obj === Object(obj);\r\n}\r\n\r\nexport class TagInputAccessor implements ControlValueAccessor {\r\n    private _items: TagModel[] = [];\r\n    private _onTouchedCallback: () => void;\r\n    private _onChangeCallback: (items: TagModel[]) => void;\r\n\r\n    /**\r\n     * @name displayBy\r\n     * @type {string}\r\n     */\r\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\r\n\r\n    /**\r\n     * @name identifyBy\r\n     * @type {string}\r\n     */\r\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\r\n\r\n    public get items(): TagModel[] {\r\n        return this._items;\r\n    };\r\n\r\n    public set items(items: TagModel[]) {\r\n        this._items = items;\r\n        this._onChangeCallback(this._items);\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(items: any[]) {\r\n        this._items = items || [];\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * @name getItemValue\r\n     * @param item\r\n     * @return {TagModel}\r\n     */\r\n    public getItemValue(item: TagModel): string {\r\n        return isObject(item) ? item[this.identifyBy] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemDisplay\r\n     * @param item\r\n     * @return {TagModel}\r\n     */\r\n    public getItemDisplay(item: TagModel): string {\r\n        return isObject(item) ? item[this.displayBy] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemsWithout\r\n     * @param index\r\n     * @return {TagModel[]}\r\n     */\r\n    protected getItemsWithout(index: number): TagModel[] {\r\n        return this.items.filter((item, position) => position !== index);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/accessor.ts","export * from './listen';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/helpers/index.ts","\r\n/**\r\n * @name listen\r\n * @param listenerType\r\n * @param action\r\n * @param condition\r\n */\r\nexport function listen(listenerType: string, action: () => any, condition = true): void {\r\n    // if the event provided does not exist, throw an error\r\n    if (!this.listeners.hasOwnProperty(listenerType)) {\r\n        throw new Error('The event entered may be wrong');\r\n    }\r\n\r\n    // if a condition is present and is false, exit early\r\n    if (!condition) {\r\n        return;\r\n    }\r\n\r\n    // fire listener\r\n    this.listeners[listenerType].push(action);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/helpers/listen.ts","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n@Pipe({\r\n    name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n    /**\r\n     * @name transform\r\n     * @param value {string}\r\n     * @param arg {string}\r\n     * @return {string}\r\n     */\r\n    public transform(value: string, arg: string): string {\r\n        if (!arg.trim()) {\r\n            return value;\r\n        }\r\n\r\n        try {\r\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\r\n            return value.replace(regex, '<b>$1</b>');\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/pipes/highlight.pipe.ts","export * from './highlight.pipe';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/core/pipes/index.ts","import { TagInputComponent } from './../../components/tag-input/tag-input';\r\nimport { TagModel } from '../accessor';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport declare interface DraggedTag {\r\n    index: number;\r\n    tag: TagModel;\r\n    zone: string;\r\n}\r\n\r\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\r\n\r\nexport declare interface State {\r\n    dragging: boolean,\r\n    dropping: boolean,\r\n    index: number | undefined\r\n}\r\n\r\nexport declare type StateProperty = keyof State;\r\n\r\n@Injectable()\r\nexport class DragProvider {\r\n    public sender: TagInputComponent;\r\n    public receiver: TagInputComponent;\r\n\r\n    public state: State = {\r\n        dragging: false,\r\n        dropping: false,\r\n        index: undefined\r\n    };\r\n\r\n    /**\r\n     * @name setDraggedItem\r\n     * @param event\r\n     * @param tag \r\n     */\r\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\r\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\r\n    }\r\n\r\n    /**\r\n     * @name getDraggedItem\r\n     * @param event \r\n     */\r\n    public getDraggedItem(event: DragEvent): DraggedTag {\r\n        const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\r\n\r\n        return JSON.parse(data) as DraggedTag;\r\n    }\r\n\r\n    /**\r\n     * @name setSender\r\n     * @param sender \r\n     */\r\n    public setSender(sender: TagInputComponent): void {\r\n        this.sender = sender;\r\n    }\r\n    \r\n    /**\r\n     * @name setReceiver\r\n     * @param receiver \r\n     */\r\n    public setReceiver(receiver: TagInputComponent): void {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param tag \r\n     * @param indexDragged \r\n     * @param indexDropped \r\n     */\r\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped: number): void {\r\n        this.onDragEnd();\r\n\r\n        this.sender.onRemoveRequested(tag, indexDragged);\r\n        this.receiver.onAddingRequested(false, tag, indexDropped);\r\n    }\r\n\r\n    /**\r\n     * @name setState\r\n     * @param state\r\n     */\r\n    public setState(state: {[K in StateProperty]?: State[K]}): void {\r\n        this.state = {...this.state, ...state};\r\n    }\r\n\r\n    /**\r\n     * @name getState\r\n     * @param key\r\n     */\r\n    public getState(key?: StateProperty): State | State[StateProperty] {\r\n        return key ? this.state[key] : this.state;\r\n    }\r\n\r\n    /**\r\n     * @name onDragEnd\r\n     */\r\n    public onDragEnd(): void {\r\n        this.setState({\r\n            dragging: false,\r\n            dropping: false,\r\n            index: undefined\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// modules/core/providers/drag-provider.ts","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\r\n\r\nexport type Options = {\r\n    tagInput?: {\r\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\r\n    };\r\n    dropdown?: {\r\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\r\n    }\r\n}\r\n\r\nexport class OptionsProvider {\r\n    public static defaults = defaults;\r\n\r\n    public setOptions(options: Options): void {\r\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\r\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\r\n    }\r\n}\r\n\r\nexport { TagInputDropdownOptions, TagInputOptions };\n\n\n// WEBPACK FOOTER //\n// modules/core/providers/options-provider.ts","import { AnimationEntryMetadata } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\r\n\r\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagModel } from './core';\r\n\r\nexport interface TagInputOptions {\r\n    separatorKeys: string[];\r\n    separatorKeyCodes: number[];\r\n    maxItems: number;\r\n    placeholder: string;\r\n    secondaryPlaceholder: string;\r\n    validators: ValidatorFn[];\r\n    asyncValidators: AsyncValidatorFn[];\r\n    onlyFromAutocomplete: boolean;\r\n    errorMessages: { [key: string]: string; };\r\n    theme: string;\r\n    onTextChangeDebounce: number;\r\n    inputId: string;\r\n    inputClass: string;\r\n    clearOnBlur: boolean;\r\n    hideForm: boolean;\r\n    addOnBlur: boolean;\r\n    addOnPaste: boolean;\r\n    pasteSplitPattern: string;\r\n    blinkIfDupe: boolean;\r\n    removable: boolean;\r\n    editable: boolean;\r\n    allowDupes: boolean;\r\n    modelAsStrings: boolean;\r\n    trimTags: boolean;\r\n    ripple: boolean;\r\n    tabIndex: string;\r\n    disable: boolean;\r\n    dragZone: string;\r\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\r\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    animationDuration: {\r\n        enter: string,\r\n        leave: string\r\n    };\r\n}\r\n\r\nexport interface TagInputDropdownOptions {\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    appendToBody: boolean;\r\n    offset: string;\r\n    focusFirstElement: boolean;\r\n    showDropdownIfEmpty: boolean;\r\n    minimumTextLength: number;\r\n    limitItemsTo: number;\r\n    keepOpen: boolean;\r\n    matchingFn: (value: string, target: TagModel) => boolean;\r\n    lookUpCallEnabled: boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    tagInput: <TagInputOptions>{\r\n        separatorKeys: [],\r\n        separatorKeyCodes: [],\r\n        maxItems: Infinity,\r\n        placeholder: PLACEHOLDER,\r\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\r\n        validators: [],\r\n        asyncValidators: [],\r\n        onlyFromAutocomplete: false,\r\n        errorMessages: {},\r\n        theme: '',\r\n        onTextChangeDebounce: 250,\r\n        inputId: '',\r\n        inputClass: '',\r\n        clearOnBlur: false,\r\n        hideForm: false,\r\n        addOnBlur: false,\r\n        addOnPaste: false,\r\n        pasteSplitPattern: ',',\r\n        blinkIfDupe: true,\r\n        removable: true,\r\n        editable: false,\r\n        allowDupes: false,\r\n        modelAsStrings: false,\r\n        trimTags: true,\r\n        ripple: true,\r\n        tabIndex: '',\r\n        disable: false,\r\n        dragZone: '',\r\n        onRemoving: undefined,\r\n        onAdding: undefined,\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        animationDuration: {\r\n            enter: \"250ms\",\r\n            leave: \"150ms\"\r\n        }\r\n    },\r\n    dropdown: <TagInputDropdownOptions>{\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        appendToBody: true,\r\n        offset: '50 0',\r\n        focusFirstElement: false,\r\n        showDropdownIfEmpty: false,\r\n        minimumTextLength: 1,\r\n        limitItemsTo: Infinity,\r\n        keepOpen: true,\r\n        matchingFn\r\n    }\r\n};\r\n\r\n/**\r\n * @name matchingFn\r\n * @param this \r\n * @param value \r\n * @param target \r\n */\r\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\r\n    const targetValue = target[this.displayBy].toString();\r\n\r\n    return targetValue && targetValue\r\n        .toLowerCase()\r\n        .indexOf(value.toLowerCase()) >= 0;\r\n}\n\n\n// WEBPACK FOOTER //\n// modules/defaults.ts","export * from './tag-input.module';\r\nexport * from './components';\r\n\n\n\n// WEBPACK FOOTER //\n// modules/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".styled-checkbox {\\n  position: absolute;\\n  opacity: 0; }\\n\\n.styled-checkbox + span {\\n  position: relative;\\n  cursor: pointer;\\n  padding: 0;\\n  font-size: 16px;\\n  line-height: 30px; }\\n\\n.styled-checkbox + span:before {\\n  content: '';\\n  margin-right: 10px;\\n  display: inline-block;\\n  vertical-align: text-top;\\n  width: 20px;\\n  height: 20px;\\n  background: white;\\n  border: 1px solid lightgray; }\\n\\n.styled-checkbox:hover + span:before {\\n  background: #2e62a4; }\\n\\n.styled-checkbox:focus + span:before {\\n  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.12); }\\n\\n.styled-checkbox:checked + span:before {\\n  background: #2e62a4; }\\n\\n.styled-checkbox:disabled + span {\\n  color: #b8b8b8;\\n  cursor: auto; }\\n\\n.styled-checkbox:disabled + span:before {\\n  box-shadow: none;\\n  background: #ddd; }\\n\\n.styled-checkbox:checked + span:after {\\n  content: '';\\n  position: absolute;\\n  left: 6px;\\n  top: 10px;\\n  background: white;\\n  width: 2px;\\n  height: 2px;\\n  box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;\\n  -webkit-transform: rotate(45deg);\\n  transform: rotate(45deg); }\\n\\n.ng2-menu-item {\\n  padding: 0.2em 1rem !important; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./modules/components/dropdown/tag-input-dropdown.scss\n// module id = 45\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".dark tag:focus {\\n  box-shadow: 0 0 0 1px #323232; }\\n\\n.ng2-tag-input.bootstrap3-info {\\n  background-color: #fff;\\n  display: inline-block;\\n  color: #555;\\n  vertical-align: middle;\\n  max-width: 100%;\\n  height: 42px;\\n  line-height: 44px; }\\n\\n.ng2-tag-input.bootstrap3-info input {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  background-color: transparent;\\n  padding: 0 6px;\\n  margin: 0;\\n  width: auto;\\n  max-width: inherit; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\\n  color: #777;\\n  opacity: 1; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\\n  color: #777; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\\n  color: #777; }\\n\\n.ng2-tag-input.bootstrap3-info input:focus {\\n  border: none;\\n  box-shadow: none; }\\n\\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\\n  border: 1px solid #ccc; }\\n\\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\\n  box-shadow: inset 0 1px 1px #d9534f; }\\n\\n.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  transition: all 0.25s;\\n  padding: 0.25rem 0;\\n  min-height: 32px;\\n  cursor: text;\\n  border-bottom: 2px solid #efefef; }\\n  .ng2-tag-input:focus {\\n    outline: 0; }\\n  .ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .ng2-tag-input.ng2-tag-input--focused {\\n    border-bottom: 2px solid #2196F3; }\\n  .ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 2px solid #f44336; }\\n  .ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .ng2-tag-input form {\\n    margin: 0.1em 0; }\\n  .ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.minimal.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 1px solid transparent; }\\n  .minimal.ng2-tag-input:focus {\\n    outline: 0; }\\n  .minimal.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .minimal.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .minimal.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .minimal.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.dark.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 2px solid #444; }\\n  .dark.ng2-tag-input:focus {\\n    outline: 0; }\\n  .dark.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .dark.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .dark.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .dark.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.bootstrap.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 2px solid #efefef; }\\n  .bootstrap.ng2-tag-input:focus {\\n    outline: 0; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--focused {\\n    border-bottom: 2px solid #0275d8; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 2px solid #d9534f; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .bootstrap.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.bootstrap3-info.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  padding: 4px;\\n  cursor: text;\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\\n  border-radius: 4px; }\\n  .bootstrap3-info.ng2-tag-input:focus {\\n    outline: 0; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 1px solid #d9534f; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .bootstrap3-info.ng2-tag-input form {\\n    margin: 0.1em 0; }\\n  .bootstrap3-info.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.error-message {\\n  font-size: 0.8em;\\n  color: #f44336;\\n  margin: 0.5em 0 0 0; }\\n\\n.bootstrap .error-message {\\n  color: #d9534f; }\\n\\n:host(delete-icon) {\\n  width: 20px;\\n  height: 16px;\\n  transition: all 0.15s;\\n  display: inline-block;\\n  text-align: right; }\\n  :host(delete-icon) path {\\n    fill: #444; }\\n  :host(delete-icon) svg {\\n    vertical-align: bottom;\\n    height: 34px; }\\n\\n:host(delete-icon):hover {\\n  transform: scale(1.5) translateY(-3px); }\\n\\n:host-context(.dark) {\\n  text-align: right; }\\n  :host-context(.dark) path {\\n    fill: #fff; }\\n  :host-context(.dark) svg {\\n    vertical-align: bottom;\\n    height: 34px; }\\n\\n:host-context(.minimal) {\\n  text-align: right; }\\n  :host-context(.minimal) path {\\n    fill: #444; }\\n  :host-context(.minimal) svg {\\n    vertical-align: bottom;\\n    height: 34px; }\\n\\n:host-context(.bootstrap) {\\n  text-align: right; }\\n  :host-context(.bootstrap) path {\\n    fill: #fff; }\\n  :host-context(.bootstrap) svg {\\n    vertical-align: bottom;\\n    height: 34px; }\\n\\n:host-context(tag:focus) path,\\n:host-context(tag:active) path {\\n  fill: #fff; }\\n\\n:host-context(.dark tag:focus) path,\\n:host-context(.dark tag:active) path {\\n  fill: #000; }\\n\\n:host-context(.minimal tag:focus) path,\\n:host-context(.minimal tag:active) path {\\n  fill: #000; }\\n\\n:host-context(.bootstrap tag:focus) path,\\n:host-context(.bootstrap tag:active) path {\\n  fill: #fff; }\\n\\n:host-context(.bootstrap3-info) {\\n  height: inherit; }\\n  :host-context(.bootstrap3-info) path {\\n    fill: #fff; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./modules/components/icon/icon.scss\n// module id = 46\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".dark tag:focus {\\n  box-shadow: 0 0 0 1px #323232; }\\n\\n.ng2-tag-input.bootstrap3-info {\\n  background-color: #fff;\\n  display: inline-block;\\n  color: #555;\\n  vertical-align: middle;\\n  max-width: 100%;\\n  height: 42px;\\n  line-height: 44px; }\\n\\n.ng2-tag-input.bootstrap3-info input {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  background-color: transparent;\\n  padding: 0 6px;\\n  margin: 0;\\n  width: auto;\\n  max-width: inherit; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\\n  color: #777;\\n  opacity: 1; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\\n  color: #777; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\\n  color: #777; }\\n\\n.ng2-tag-input.bootstrap3-info input:focus {\\n  border: none;\\n  box-shadow: none; }\\n\\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\\n  border: 1px solid #ccc; }\\n\\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\\n  box-shadow: inset 0 1px 1px #d9534f; }\\n\\n.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  transition: all 0.25s;\\n  padding: 0.25rem 0;\\n  min-height: 32px;\\n  cursor: text;\\n  border-bottom: 2px solid #efefef; }\\n  .ng2-tag-input:focus {\\n    outline: 0; }\\n  .ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .ng2-tag-input.ng2-tag-input--focused {\\n    border-bottom: 2px solid #2196F3; }\\n  .ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 2px solid #f44336; }\\n  .ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .ng2-tag-input form {\\n    margin: 0.1em 0; }\\n  .ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.minimal.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 1px solid transparent; }\\n  .minimal.ng2-tag-input:focus {\\n    outline: 0; }\\n  .minimal.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .minimal.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .minimal.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .minimal.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.dark.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 2px solid #444; }\\n  .dark.ng2-tag-input:focus {\\n    outline: 0; }\\n  .dark.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .dark.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .dark.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .dark.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.bootstrap.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 2px solid #efefef; }\\n  .bootstrap.ng2-tag-input:focus {\\n    outline: 0; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--focused {\\n    border-bottom: 2px solid #0275d8; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 2px solid #d9534f; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .bootstrap.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.bootstrap3-info.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  padding: 4px;\\n  cursor: text;\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\\n  border-radius: 4px; }\\n  .bootstrap3-info.ng2-tag-input:focus {\\n    outline: 0; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 1px solid #d9534f; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .bootstrap3-info.ng2-tag-input form {\\n    margin: 0.1em 0; }\\n  .bootstrap3-info.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.error-message {\\n  font-size: 0.8em;\\n  color: #f44336;\\n  margin: 0.5em 0 0 0; }\\n\\n.bootstrap .error-message {\\n  color: #d9534f; }\\n\\n.ng2-tag-input__text-input {\\n  display: inline;\\n  vertical-align: middle;\\n  border: none;\\n  padding: 0 0.5rem;\\n  height: 38px;\\n  font-size: 1em;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif; }\\n  .ng2-tag-input__text-input:focus {\\n    outline: 0; }\\n  .ng2-tag-input__text-input[disabled=true] {\\n    opacity: 0.5;\\n    background: #fff; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./modules/components/tag-input-form/tag-input-form.style.scss\n// module id = 47\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".dark tag:focus {\\n  box-shadow: 0 0 0 1px #323232; }\\n\\n.ng2-tag-input.bootstrap3-info {\\n  background-color: #fff;\\n  display: inline-block;\\n  color: #555;\\n  vertical-align: middle;\\n  max-width: 100%;\\n  height: 42px;\\n  line-height: 44px; }\\n\\n.ng2-tag-input.bootstrap3-info input {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  background-color: transparent;\\n  padding: 0 6px;\\n  margin: 0;\\n  width: auto;\\n  max-width: inherit; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\\n  color: #777;\\n  opacity: 1; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\\n  color: #777; }\\n\\n.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\\n  color: #777; }\\n\\n.ng2-tag-input.bootstrap3-info input:focus {\\n  border: none;\\n  box-shadow: none; }\\n\\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\\n  border: 1px solid #ccc; }\\n\\n.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\\n  box-shadow: inset 0 1px 1px #d9534f; }\\n\\n.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  transition: all 0.25s;\\n  padding: 0.25rem 0;\\n  min-height: 32px;\\n  cursor: text;\\n  border-bottom: 2px solid #efefef; }\\n  .ng2-tag-input:focus {\\n    outline: 0; }\\n  .ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .ng2-tag-input.ng2-tag-input--focused {\\n    border-bottom: 2px solid #2196F3; }\\n  .ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 2px solid #f44336; }\\n  .ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .ng2-tag-input form {\\n    margin: 0.1em 0; }\\n  .ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.minimal.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 1px solid transparent; }\\n  .minimal.ng2-tag-input:focus {\\n    outline: 0; }\\n  .minimal.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .minimal.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .minimal.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .minimal.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.dark.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 2px solid #444; }\\n  .dark.ng2-tag-input:focus {\\n    outline: 0; }\\n  .dark.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .dark.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .dark.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .dark.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.bootstrap.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  cursor: text;\\n  border-bottom: 2px solid #efefef; }\\n  .bootstrap.ng2-tag-input:focus {\\n    outline: 0; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--focused {\\n    border-bottom: 2px solid #0275d8; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 2px solid #d9534f; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .bootstrap.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.bootstrap3-info.ng2-tag-input {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  position: relative;\\n  padding: 4px;\\n  cursor: text;\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\\n  border-radius: 4px; }\\n  .bootstrap3-info.ng2-tag-input:focus {\\n    outline: 0; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\\n    opacity: 0.7; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\\n    border-bottom: 1px solid #d9534f; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\\n    border: none; }\\n  .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed; }\\n  .bootstrap3-info.ng2-tag-input form {\\n    margin: 0.1em 0; }\\n  .bootstrap3-info.ng2-tag-input .ng2-tags-container {\\n    flex-wrap: wrap;\\n    display: flex; }\\n\\n.error-message {\\n  font-size: 0.8em;\\n  color: #f44336;\\n  margin: 0.5em 0 0 0; }\\n\\n.bootstrap .error-message {\\n  color: #d9534f; }\\n\\n.progress-bar, .progress-bar:before {\\n  height: 2px;\\n  width: 100%;\\n  margin: 0; }\\n\\n.progress-bar {\\n  background-color: #2196F3;\\n  display: flex;\\n  position: absolute;\\n  bottom: 0; }\\n\\n.progress-bar:before {\\n  background-color: #82c4f8;\\n  content: '';\\n  -webkit-animation: running-progress 2s cubic-bezier(0.4, 0, 0.2, 1) infinite;\\n  animation: running-progress 2s cubic-bezier(0.4, 0, 0.2, 1) infinite; }\\n\\n@-webkit-keyframes running-progress {\\n  0% {\\n    margin-left: 0;\\n    margin-right: 100%; }\\n  50% {\\n    margin-left: 25%;\\n    margin-right: 0; }\\n  100% {\\n    margin-left: 100%;\\n    margin-right: 0; } }\\n\\n@keyframes running-progress {\\n  0% {\\n    margin-left: 0;\\n    margin-right: 100%; }\\n  50% {\\n    margin-left: 25%;\\n    margin-right: 0; }\\n  100% {\\n    margin-left: 100%;\\n    margin-right: 0; } }\\n\\ntag {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  font-weight: 400;\\n  font-size: 1em;\\n  letter-spacing: 0.05rem;\\n  color: #444;\\n  border-radius: 16px;\\n  transition: all 0.3s;\\n  margin: 0.1rem 0.3rem 0.1rem 0;\\n  padding: 0.08rem 0.45rem;\\n  height: 32px;\\n  line-height: 34px;\\n  background: #efefef;\\n  user-select: none;\\n  overflow: hidden;\\n  outline: 0;\\n  cursor: pointer;\\n  position: relative; }\\n  tag:not(.readonly):not(.tag--editing):focus {\\n    background: #2196F3;\\n    color: #fff; }\\n  tag:not(.readonly):not(.tag--editing):active {\\n    background: #0d8aee;\\n    color: #fff; }\\n  tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\\n    background: #e2e2e2;\\n    color: initial; }\\n  tag.readonly {\\n    cursor: default; }\\n  tag.readonly:focus, tag:focus {\\n    outline: 0; }\\n  tag.tag--editing {\\n    background-color: #fff;\\n    border: 1px solid #ccc;\\n    cursor: text; }\\n\\n.minimal tag {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  border-radius: 0;\\n  background: #f9f9f9;\\n  user-select: none;\\n  overflow: hidden;\\n  outline: 0;\\n  cursor: pointer;\\n  position: relative; }\\n  .minimal tag:not(.readonly):not(.tag--editing):focus {\\n    background: #d0d0d0;\\n    color: initial; }\\n  .minimal tag:not(.readonly):not(.tag--editing):active {\\n    background: #d0d0d0;\\n    color: initial; }\\n  .minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\\n    background: #ececec; }\\n  .minimal tag.readonly {\\n    cursor: default; }\\n  .minimal tag.readonly:focus, .minimal tag:focus {\\n    outline: 0; }\\n  .minimal tag.tag--editing {\\n    cursor: text; }\\n\\n.dark tag {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  color: #f9f9f9;\\n  border-radius: 3px;\\n  background: #444;\\n  user-select: none;\\n  overflow: hidden;\\n  outline: 0;\\n  cursor: pointer;\\n  position: relative; }\\n  .dark tag:not(.readonly):not(.tag--editing):focus {\\n    background: #efefef;\\n    color: #444; }\\n  .dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\\n    background: #2b2b2b;\\n    color: #f9f9f9; }\\n  .dark tag.readonly {\\n    cursor: default; }\\n  .dark tag.readonly:focus, .dark tag:focus {\\n    outline: 0; }\\n  .dark tag.tag--editing {\\n    cursor: text; }\\n\\n.bootstrap tag {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  color: #f9f9f9;\\n  border-radius: 0.25rem;\\n  background: #0275d8;\\n  user-select: none;\\n  overflow: hidden;\\n  outline: 0;\\n  cursor: pointer;\\n  position: relative; }\\n  .bootstrap tag:not(.readonly):not(.tag--editing):focus {\\n    background: #025aa5; }\\n  .bootstrap tag:not(.readonly):not(.tag--editing):active {\\n    background: #025aa5; }\\n  .bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\\n    background: #0267bf;\\n    color: #f9f9f9; }\\n  .bootstrap tag.readonly {\\n    cursor: default; }\\n  .bootstrap tag.readonly:focus, .bootstrap tag:focus {\\n    outline: 0; }\\n  .bootstrap tag.tag--editing {\\n    cursor: text; }\\n\\n.bootstrap3-info tag {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  font-family: inherit;\\n  font-weight: 400;\\n  font-size: 95%;\\n  color: #fff;\\n  border-radius: 0.25em;\\n  background: #5bc0de;\\n  user-select: none;\\n  overflow: hidden;\\n  outline: 0;\\n  cursor: pointer;\\n  position: relative;\\n  padding: .25em .6em;\\n  text-align: center;\\n  white-space: nowrap; }\\n  .bootstrap3-info tag:not(.readonly):not(.tag--editing):focus {\\n    background: #28a1c5; }\\n  .bootstrap3-info tag:not(.readonly):not(.tag--editing):active {\\n    background: #28a1c5; }\\n  .bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\\n    background: #46b8da;\\n    color: #fff; }\\n  .bootstrap3-info tag.readonly {\\n    cursor: default; }\\n  .bootstrap3-info tag.readonly:focus, .bootstrap3-info tag:focus {\\n    outline: 0; }\\n  .bootstrap3-info tag.tag--editing {\\n    cursor: text; }\\n\\n:host {\\n  display: block; }\\n\\n.hidden {\\n  display: none !important; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./modules/components/tag-input/tag-input.style.scss\n// module id = 48\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \":host,\\n:host > div,\\n:host > div:focus {\\n  outline: 0;\\n  overflow: hidden;\\n  transition: opacity 1s;\\n  z-index: 1; }\\n\\n:host {\\n  max-width: 400px; }\\n\\n:host.blink {\\n  -webkit-animation: blink 0.3s normal forwards ease-in-out;\\n  animation: blink 0.3s normal forwards ease-in-out; }\\n\\n@keyframes blink {\\n  0% {\\n    opacity: 0.3; } }\\n\\n:host .disabled {\\n  cursor: not-allowed; }\\n\\n:host [contenteditable='true'] {\\n  outline: 0; }\\n\\n.tag-wrapper {\\n  flex-direction: row;\\n  display: flex; }\\n\\n.tag__text {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./modules/components/tag/tag-component.style.scss\n// module id = 49\n// module chunks = 1","module.exports = \"<ng2-dropdown (onItemClicked)=\\\"onItemChecked($event)\\\" >\\r\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\" [appendToBody]=\\\"appendToBody\\\" [offset]=\\\"offset\\\">\\r\\n        <ng2-menu-item [preventClose]=\\\"true\\\" *ngFor=\\\"let item of items; let index = index; let last = last\\\" [value]=\\\"item\\\" [ngSwitch]=\\\"!!templates.length\\\">\\r\\n            <input class=\\\"styled-checkbox\\\" type=\\\"checkbox\\\" name=\\\"item[displayBy]\\\" [(ngModel)]=\\\"item.checked\\\">\\r\\n            <span *ngSwitchCase=\\\"false\\\" [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\r\\n            </span>\\r\\n            <ng-template *ngSwitchDefault [ngTemplateOutlet]=\\\"templates.first\\\" [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\r\\n            </ng-template>\\r\\n        </ng2-menu-item>\\r\\n    </ng2-dropdown-menu>\\r\\n</ng2-dropdown>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/dropdown/tag-input-dropdown.template.html\n// module id = 50\n// module chunks = 1","module.exports = \"<span>\\r\\n    <svg height=\\\"16px\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\">\\r\\n        <path d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\r\\n              fill=\\\"#121313\\\" />\\r\\n    </svg>\\r\\n</span>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/icon/icon.html\n// module id = 51\n// module chunks = 1","module.exports = \"<!-- form -->\\r\\n<form (submit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\r\\n    <input #input\\r\\n\\r\\n           type=\\\"text\\\"\\r\\n           class=\\\"ng2-tag-input__text-input\\\"\\r\\n           autocomplete=\\\"off\\\"\\r\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\r\\n           minlength=\\\"1\\\"\\r\\n\\r\\n           [(ngModel)]=\\\"inputText\\\"\\r\\n           [formControlName]=\\\"'item'\\\"\\r\\n           [ngClass]=\\\"inputClass\\\"\\r\\n           [attr.id]=\\\"inputId\\\"\\r\\n           [attr.placeholder]=\\\"placeholder\\\"\\r\\n           [attr.aria-label]=\\\"placeholder\\\"\\r\\n           [attr.tabindex]=\\\"tabindex\\\"\\r\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\r\\n\\r\\n           (focus)=\\\"onFocus.emit($event);\\\"\\r\\n           (blur)=\\\"onBlur.emit($event)\\\"\\r\\n           (keydown)=\\\"onKeyDown($event)\\\"\\r\\n           (keyup)=\\\"onKeyup.emit($event)\\\"\\r\\n    />\\r\\n</form>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/tag-input-form/tag-input-form.template.html\n// module id = 52\n// module chunks = 1","module.exports = \"<!-- CONTAINER -->\\r\\n\\r\\n<div ngClass=\\\"ng2-tag-input {{ theme || '' }}\\\"\\r\\n     (click)=\\\"focus(true, false)\\\"\\r\\n     [attr.tabindex]=\\\"-1\\\"\\r\\n\\r\\n     (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\r\\n     (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\r\\n     (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\r\\n     (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\r\\n\\r\\n     [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\r\\n     [class.ng2-tag-input--disabled]=\\\"disable\\\"\\r\\n     [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\r\\n     [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\r\\n     [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\">\\r\\n\\r\\n    <!-- TAGS -->\\r\\n    <div class=\\\"ng2-tags-container\\\">\\r\\n        <tag [class.hidden]=\\\"!displayInlineTags\\\" *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\r\\n\\r\\n             (onSelect)=\\\"selectItem(item)\\\"\\r\\n             (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\r\\n             (onKeyDown)=\\\"handleKeydown($event, item)\\\"\\r\\n             (onTagEdited)=\\\"onTagEdited.emit($event)\\\"\\r\\n             (onBlur)=\\\"onTagBlurred($event, i)\\\"\\r\\n             draggable=\\\"{{ editable }}\\\"\\r\\n\\r\\n             (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\r\\n             (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\r\\n             (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\r\\n             (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\r\\n             (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\r\\n\\r\\n             [hidden]=\\\"true\\\"\\r\\n             [attr.tabindex]=\\\"0\\\"\\r\\n             [disabled]=\\\"disable\\\"\\r\\n             [@animation]=\\\"animationMetadata\\\"\\r\\n             [hasRipple]=\\\"ripple\\\"\\r\\n             [index]=\\\"i\\\"\\r\\n             [removable]=\\\"removable\\\"\\r\\n             [editable]=\\\"editable\\\"\\r\\n             [displayBy]=\\\"displayBy\\\"\\r\\n             [identifyBy]=\\\"identifyBy\\\"\\r\\n             [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\r\\n             [draggable]=\\\"dragZone\\\"\\r\\n             [model]=\\\"item\\\">\\r\\n        </tag>\\r\\n\\r\\n        <tag-input-form\\r\\n            (onSubmit)=\\\"onAddingRequested(false, formValue)\\\"\\r\\n            (onBlur)=\\\"blur()\\\"\\r\\n            (click)=\\\"onInputClick($event)\\\"\\r\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\r\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\r\\n\\r\\n            [(inputText)]=\\\"inputText\\\"\\r\\n            [disabled]=\\\"disable\\\"\\r\\n            [validators]=\\\"validators\\\"\\r\\n            [asyncValidators]=\\\"asyncValidators\\\"\\r\\n            [hidden]=\\\"maxItemsReached\\\"\\r\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\r\\n            [inputClass]=\\\"inputClass\\\"\\r\\n            [inputId]=\\\"inputId\\\"\\r\\n            [tabindex]=\\\"tabindex\\\">\\r\\n        </tag-input-form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"progress-bar\\\" *ngIf=\\\"isLoading\\\"></div>\\r\\n</div>\\r\\n\\r\\n<!-- ERRORS -->\\r\\n<div *ngIf=\\\"hasErrors()\\\" class=\\\"error-messages {{ theme || '' }}\\\">\\r\\n    <p *ngFor=\\\"let error of inputForm.getErrorMessages(errorMessages)\\\" class=\\\"error-message\\\">\\r\\n        <span>{{ error }}</span>\\r\\n    </p>\\r\\n</div>\\r\\n\\r\\n<ng-content></ng-content>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/tag-input/tag-input.template.html\n// module id = 53\n// module chunks = 1","module.exports = \"<div (click)=\\\"select($event)\\\"\\r\\n     (dblclick)=\\\"toggleEditMode()\\\"\\r\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\r\\n     (mouseup)=\\\"rippleState='none'\\\"\\r\\n     [ngSwitch]=\\\"!!template\\\"\\r\\n     [class.disabled]=\\\"disabled\\\"\\r\\n     [attr.tabindex]=\\\"-1\\\"\\r\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\r\\n\\r\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\r\\n        <!-- CUSTOM TEMPLATE -->\\r\\n        <ng-template\\r\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\r\\n            [ngTemplateOutlet]=\\\"template\\\">\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\r\\n        <!-- TAG NAME -->\\r\\n        <div [attr.contenteditable]=\\\"editing\\\"\\r\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\r\\n             class=\\\"tag__text inline\\\"\\r\\n             spellcheck=\\\"false\\\"\\r\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\r\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\r\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\r\\n             (blur)=\\\"onBlurred($event)\\\">\\r\\n            {{ getDisplayValue(model) }}\\r\\n        </div>\\r\\n\\r\\n        <!-- 'X' BUTTON -->\\r\\n        <delete-icon\\r\\n            aria-label=\\\"Remove tag\\\"\\r\\n            role=\\\"button\\\"\\r\\n            (click)=\\\"remove($event)\\\"\\r\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\r\\n        </delete-icon>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<tag-ripple [state]=\\\"rippleState\\\"\\r\\n            [attr.tabindex]=\\\"-1\\\"\\r\\n            *ngIf=\\\"isRippleVisible\\\">\\r\\n</tag-ripple>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/tag/tag.template.html\n// module id = 54\n// module chunks = 1","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 55\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 56\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar first_1 = require('../../operator/first');\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/first.js\n// module id = 57\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ArrayObservable.js\n// module id = 58\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/EmptyObservable.js\n// module id = 59\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ScalarObservable.js\n// module id = 60\n// module chunks = 1","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/of.js\n// module id = 61\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/debounceTime.js\n// module id = 62\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/filter.js\n// module id = 63\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/first.js\n// module id = 64\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/map.js\n// module id = 65\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 66\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 67\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 68\n// module chunks = 1","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/async.js\n// module id = 69\n// module chunks = 1","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 70\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/EmptyError.js\n// module id = 71\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 72\n// module chunks = 1","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 73\n// module chunks = 1","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 74\n// module chunks = 1","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isScheduler.js\n// module id = 75\n// module chunks = 1","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 76\n// module chunks = 1","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 77\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/lib/loader.js!./tag-input-dropdown.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/dropdown/tag-input-dropdown.scss\n// module id = 78\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/lib/loader.js!./icon.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/icon/icon.scss\n// module id = 79\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/lib/loader.js!./tag-input-form.style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/tag-input-form/tag-input-form.style.scss\n// module id = 80\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/lib/loader.js!./tag-input.style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/tag-input/tag-input.style.scss\n// module id = 81\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/lib/loader.js!./tag-component.style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/components/tag/tag-component.style.scss\n// module id = 82\n// module chunks = 1"],"mappingsjrQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;ACJA;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;;;;;;;ACKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;;;;;ACCA;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChMA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAeA;AAAA;AAQA;AAHA;AACA;AACA;AACA;AAAA;AARA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;ACxCA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAgBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAOA;AAgJA;AAAA;AAAA;AA/HA;AAMA;AAOA;AAYA;AAMA;AAKA;AAKA;AAMA;AAMA;AAOA;AAMA;AAOA;AAKA;AAOA;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAgDA;AACA;AACA;AAyDA;AACA;AACA;AAqBA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AA5QA;AApCA;AASA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;AAMA;AACA;AAlCA;AACA;AACA;;;AAAA;AAuCA;AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAMA;AAAA;AACA;AACA;;;AAAA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAMA;AAAA;AACA;AACA;;;AAAA;AAMA;AAAA;AACA;AACA;;;AAAA;AAmDA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAeA;AACA;AACA;AAEA;;AAKA;AAOA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AAkCA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAzaA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAkCA;AAAA;;;AAyBA;AAqIA;AADA;;;;AAOA;AAMA;AADA;;;;AAGA;AAjSA;AALA;AACA;AACA;AACA;AACA;AAiJA;AAhJA;AAAA;;;;;;;;;;;;;;;;;AChCA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;ACPA;AAAA;AAAA;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAOA;AALA;AAUA;AAMA;AAMA;AAMA;AAMA;AAcA;AAOA;AA0BA;AAKA;AAyBA;AAKA;AA6FA;AAzIA;AAAA;AACA;AACA;AAkBA;AACA;AACA;AACA;;;AArBA;AA4CA;AAEA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;;;AAAA;AAMA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAvMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAQA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAKA;AAAA;;;AAEA;AAOA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAcA;AAAA;;AAAA;AAWA;AAAA;AAAA;AAAA;AA1GA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvCA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AAsBA;AAQA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAOA;AAMA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AASA;AAAA;AAuWA;AAAA;AAAA;AACA;AACA;AAvWA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AAMA;AAMA;AAMA;AAMA;AAKA;AAMA;AAMA;AAKA;AAKA;AAMA;AAMA;AAMA;AAMA;AAMA;AAOA;AAMA;AAqBA;AAOA;AAMA;AAMA;AAMA;AAMA;AAKA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AAOA;AA+BA;AAsBA;AACA;AACA;AACA;AAOA;AAOA;AAmHA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;;AAKA;AAigBA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;;AApoBA;AA9MA;AAAA;AACA;AACA;AAsJA;AACA;AACA;AACA;;;AAzJA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAuLA;AAAA;AACA;AACA;;;AAAA;AAgBA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAOA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAyCA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAQA;AAAA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AACA;AACA;AACA;;;AAAA;AAMA;AAAA;AACA;AAEA;AACA;;;AAAA;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAOA;AACA;AACA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AAGA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAQA;AACA;AAGA;AACA;AACA;AAGA;AAGA;AACA;AAQA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AAGA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAGA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AACA;AAEA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA5/BA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAKA;AAAA;;;AAEA;AAEA;AAAA;;;AAMA;AAMA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAeA;AADA;;;AAGA;AAhWA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAwWA;AACA;AACA;AAzWA;AAAA;;;;;;;;;;;;;;;;;;;;;AC/EA;AA+CA;AApCA;AAqCA;AACA;AAAA;AAAA;AADA;AAAA;;AAAA;AADA;AApCA;AACA;AACA;AAkBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;AC/CA;AAeA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAOA;AA0GA;AAAA;AACA;AACA;AAhEA;AAMA;AAMA;AAMA;AAMA;AAMA;AAaA;AAYA;AASA;AA7BA;AAAA;AACA;AACA;;;AAAA;AAAA;AAgCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AAEA;;AACA;AAOA;AACA;AACA;AAQA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAMA;AACA;AAEA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;;AACA;AAKA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvTA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAmBA;AAAA;;AAAA;AAWA;AAAA;AAAA;AAAA;AA+CA;AADA;;;;AAQA;AA9JA;AALA;AACA;AACA;AACA;AACA;AA2GA;AACA;AACA;AA5GA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AAQA;AAMA;AAqDA;AAnDA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AALA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAOA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;;AA3DA;AAAA;;AAAA;AAMA;AAAA;;AAAA;;;;;;;;AC1BA;AAAA;AAAA;;;;;;;;ACOA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAKA;AAAA;AAmBA;AAZA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAnBA;AAHA;AACA;AACA;AACA;AAAA;;;;;;;;ACPA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA;AAQA;AAWA;AADA;AAKA;AACA;AACA;AACA;AACA;AA4EA;AArEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AApFA;AADA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACtBA;AAWA;AAAA;AAOA;AAJA;AACA;AACA;AACA;AACA;AAAA;;AANA;;;;;;;;ACRA;AAAA;AAAA;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACznvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}